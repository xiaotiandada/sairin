{"pageProps":{"post":{"id":"MDU6SXNzdWU5NzQ4NzI1MzM=","url":"https://github.com/xiaotiandada/blog/issues/83","title":"Vue 源码解析","updatedAt":"2021-08-31T17:29:24Z","createdAt":"2021-08-19T17:07:24Z","body":"- https://ustbhuangyi.github.io/vue-analysis/v2/prepare/\r\n\r\n### core/index.js\r\n\r\n```javascript\r\nimport Vue from './instance/index'\r\nimport { initGlobalAPI } from './global-api/index'\r\n\r\ninitGlobalAPI(Vue)\r\n```\r\n\r\n### core/instance/index.js\r\n\r\n```javascript\r\nimport { initMixin } from './init'\r\nimport { stateMixin } from './state'\r\nimport { renderMixin } from './render'\r\nimport { eventsMixin } from './events'\r\nimport { lifecycleMixin } from './lifecycle'\r\nimport { warn } from '../util/index'\r\n// 一个用 Function 实现的类，我们只能通过 new Vue 去实例化它。\r\nfunction Vue (options) {\r\n  if (process.env.NODE_ENV !== 'production' &&\r\n    !(this instanceof Vue)\r\n  ) {\r\n    warn('Vue is a constructor and should be called with the `new` keyword')\r\n  }\r\n  this._init(options)\r\n}\r\n// 后看这里有很多 xxxMixin 的函数调用，并把 Vue 当参数传入，它们的功能都是给 Vue 的 prototype 上扩展一些方法，\r\n// Vue 按功能把这些扩展分散到多个模块中去实现，而不是在一个模块里实现所有，\r\n// 这种方式是用 Class 难以实现的。这么做的好处是非常方便代码的维护和管理。\r\ninitMixin(Vue)\r\nstateMixin(Vue)\r\neventsMixin(Vue)\r\nlifecycleMixin(Vue)\r\nrenderMixin(Vue)\r\n\r\nexport default Vue\r\n```\r\n\r\n","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<ul>\n<li><a href=\"https://ustbhuangyi.github.io/vue-analysis/v2/prepare/\">https://ustbhuangyi.github.io/vue-analysis/v2/prepare/</a></li>\n</ul>\n<h3 id=\"coreindexjs\">core/index.js</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'./instance/index'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initGlobalAPI <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./global-api/index'</span>\n\n<span class=\"token function\">initGlobalAPI</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span></code></pre><h3 id=\"coreinstanceindexjs\">core/instance/index.js</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./init'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> stateMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./state'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> renderMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./render'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> eventsMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./events'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> lifecycleMixin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lifecycle'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> warn <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../util/index'</span>\n<span class=\"token comment\">// 一个用 Function 实现的类，我们只能通过 new Vue 去实例化它。</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Vue</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vue is a constructor and should be called with the `new` keyword'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_init</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 后看这里有很多 xxxMixin 的函数调用，并把 Vue 当参数传入，它们的功能都是给 Vue 的 prototype 上扩展一些方法，</span>\n<span class=\"token comment\">// Vue 按功能把这些扩展分散到多个模块中去实现，而不是在一个模块里实现所有，</span>\n<span class=\"token comment\">// 这种方式是用 Class 难以实现的。这么做的好处是非常方便代码的维护和管理。</span>\n<span class=\"token function\">initMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n<span class=\"token function\">stateMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n<span class=\"token function\">eventsMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n<span class=\"token function\">lifecycleMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n<span class=\"token function\">renderMixin</span><span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Vue</code></pre>","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}