{"pageProps":{"post":{"id":"I_kwDOD_pKSM496bkJ","url":"https://github.com/xiaotiandada/blog/issues/88","title":"React Hooks 学习","updatedAt":"2022-03-24T16:36:45Z","createdAt":"2021-10-28T16:47:17Z","body":"- https://segmentfault.com/a/1190000021057476\r\n- https://github.com/facebook/react/blob/5f06576f51ece88d846d01abd2ddd575827c6127/packages/react-reconciler/src/ReactFiberHooks.js#L336\r\n\r\n```tsx\r\nimport { render } from \"react-dom\";\r\n\r\nconst memorizedState: any[] = [];\r\nlet cursor: number = 0;\r\n\r\nfunction useState<T>(initialState: T): [T, any] {\r\n  memorizedState[cursor] = memorizedState[cursor] || initialState;\r\n  const currentCursor = cursor;\r\n\r\n  function setState<T>(newState: T) {\r\n    memorizedState[currentCursor] = newState;\r\n    renderFn();\r\n  }\r\n\r\n  return [memorizedState[cursor++], setState];\r\n}\r\n\r\nfunction useCallback(callback: any, dependenciesArray?: any[]) {\r\n  const hasNotDependencies = !dependenciesArray;\r\n\r\n  const dependencies = memorizedState[cursor];\r\n\r\n  const changeDependencies = dependencies\r\n    ? !dependenciesArray!.every((el, i) => el === dependencies[i])\r\n    : true;\r\n\r\n  // 没有依赖 或者 依赖改变\r\n  if (hasNotDependencies || changeDependencies) {\r\n    callback();\r\n    memorizedState[cursor] = dependenciesArray;\r\n  }\r\n\r\n  cursor++;\r\n}\r\n\r\nfunction App() {\r\n  const [count, setCount] = useState(0);\r\n  const [name, setName] = useState(\"xiao\");\r\n\r\n  useCallback(() => {\r\n    console.log(\"not dependencies\");\r\n  });\r\n\r\n  useCallback(() => {\r\n    console.log(\"only once\");\r\n  }, []);\r\n\r\n  useCallback(() => {\r\n    console.log(\"change count or name\", count, name);\r\n  }, [count, name]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setCount(Date.now())}>count {count}</button>\r\n      <button onClick={() => setName(Date.now() + \" - name\")}>\r\n        name {name}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst root = document.getElementById(\"root\");\r\n\r\nfunction renderFn() {\r\n  cursor = 0;\r\n  render(<App />, root);\r\n}\r\n\r\nrenderFn();\r\n\r\n```\r\n\r\nhttps://codesandbox.io/s/react-hooks-ytbtb?file=/src/index.tsx\r\n\r\n依靠 memorizedState 数组来存放数据","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<ul>\n<li><a href=\"https://segmentfault.com/a/1190000021057476\">https://segmentfault.com/a/1190000021057476</a></li>\n<li><a href=\"https://github.com/facebook/react/blob/5f06576f51ece88d846d01abd2ddd575827c6127/packages/react-reconciler/src/ReactFiberHooks.js#L336\">https://github.com/facebook/react/blob/5f06576f51ece88d846d01abd2ddd575827c6127/packages/react-reconciler/src/ReactFiberHooks.js#L336</a></li>\n</ul>\n<pre class=\"language-tsx\"><code class=\"language-tsx\">import { render } from \"react-dom\";\n\nconst memorizedState: any[] = [];\nlet cursor: number = 0;\n\nfunction useState<T>(initialState: T): [T, any] {\n  memorizedState[cursor] = memorizedState[cursor] || initialState;\n  const currentCursor = cursor;\n\n  function setState<T>(newState: T) {\n    memorizedState[currentCursor] = newState;\n    renderFn();\n  }\n\n  return [memorizedState[cursor++], setState];\n}\n\nfunction useCallback(callback: any, dependenciesArray?: any[]) {\n  const hasNotDependencies = !dependenciesArray;\n\n  const dependencies = memorizedState[cursor];\n\n  const changeDependencies = dependencies\n    ? !dependenciesArray!.every((el, i) => el === dependencies[i])\n    : true;\n\n  // 没有依赖 或者 依赖改变\n  if (hasNotDependencies || changeDependencies) {\n    callback();\n    memorizedState[cursor] = dependenciesArray;\n  }\n\n  cursor++;\n}\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState(\"xiao\");\n\n  useCallback(() => {\n    console.log(\"not dependencies\");\n  });\n\n  useCallback(() => {\n    console.log(\"only once\");\n  }, []);\n\n  useCallback(() => {\n    console.log(\"change count or name\", count, name);\n  }, [count, name]);\n\n  return (\n    <div>\n      <button onClick={() => setCount(Date.now())}>count {count}</button>\n      <button onClick={() => setName(Date.now() + \" - name\")}>\n        name {name}\n      </button>\n    </div>\n  );\n}\n\nconst root = document.getElementById(\"root\");\n\nfunction renderFn() {\n  cursor = 0;\n  render(<App />, root);\n}\n\nrenderFn();\n</code></pre><p><a href=\"https://codesandbox.io/s/react-hooks-ytbtb?file=/src/index.tsx\">https://codesandbox.io/s/react-hooks-ytbtb?file=/src/index.tsx</a></p>\n<p>依靠 memorizedState 数组来存放数据</p>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}