{"pageProps":{"post":{"id":"MDU6SXNzdWU3ODg3NDkyNTI=","url":"https://github.com/xiaotiandada/blog/issues/46","title":"Ethereum study notes (Ethereum学习笔记)","updatedAt":"2021-01-19T06:35:11Z","createdAt":"2021-01-19T06:35:11Z","body":" 2020-04-30 20:28:54\r\n\r\n# Ethereum\r\n\r\nEthereum study notes\r\n\r\n学习资料\r\n\r\n- https://ethereum.org/\r\n- https://solidity.readthedocs.io/en/v0.6.6/introduction-to-smart-contracts.html\r\n- https://www.qikegu.com/docs/4733\r\n- https://www.trufflesuite.com/tutorials/pet-shop\r\n\r\n## 总结(一) \r\n\r\n### 配置本地的开发环境以及遇到的坑\r\n\r\n首先看看这里 https://ethereum.org/\r\n\r\n然后开发可以参照这篇文章进行学习和实战 https://www.qikegu.com/docs/4733\r\n\r\n在``truffle init``的时候遇到一个connect x.x.x.x:443的错误\r\n\r\n官方给出来的答复是 GFW ``It's all GFW's fault, when i crossed GFW, everything work.`` [issues/2995](https://github.com/trufflesuite/truffle/issues/2995)\r\n\r\n我目前的解决方案是直接clone [repo](https://github.com/truffle-box/bare-box)然后一些基本的目录都有了,然后在继续参考教程跑流程\r\n\r\n## 总结(二)\r\n\r\n### 本地部署多个项目的合约无法成功\r\n\r\n本地执行 ``truffle compile`` 显示是成功的\r\n\r\n执行 ``truffle migrate`` 显示是最新的\r\n\r\n但是实际在 ``truffle console`` || ``truffle test`` 里面调用时错误的\r\n\r\n解决方案是 ``truffle migrate --reset`` 增加 ``--reset`` !!!\r\n\r\n看到一篇文章有写到这个问题 https://www.jianshu.com/p/42479ede6730 \r\n\r\n> 这个命令会执行所有migrations目录下的js文件。如果之前执行过truffle migrate命令，再次执行，只会部署新的js文件，如果没有新的js文件，不会起任何作用。如果使用--reset参数，则会重新的执行所有脚本的部署。truffle migrate --reset。\r\n\r\n## 总结(二)\r\n\r\n### 简单的计数器合约\r\n\r\n### 初始化项目\r\n\r\n因为本地``truffle init``有问题, 所以我这里采取``clone``的方式init, 具体步骤参考上文\r\n\r\n```bash\r\ngit clone xxxxxx\r\n```\r\n\r\n然后替换名字\r\n\r\n```bash\r\nmv xxx counter\r\n```\r\n\r\n然后喜欢性的npm\r\n\r\n```bash\r\nnpm init\r\n```\r\n\r\n\r\n\r\n### 新建计数器合约\r\n\r\n在``contracts``目录新建\r\n\r\n```bash\r\ntouch Counter.sol\r\n```\r\n\r\n```js\r\npragma solidity >=0.4.21 <0.7.0;\r\n\r\n// 声明\r\ncontract Counter {\r\n  // 声明计数器变量\r\n  uint256 counter;\r\n\r\n  // 部署时调用 初始化\r\n  constructor() public {\r\n    counter = 0;\r\n  }\r\n\r\n  // 增加方法\r\n  function increase() public {\r\n    counter += 1;\r\n  }\r\n\r\n  // 返回counter uint256是类型\r\n  function get() public view returns(uint256) {\r\n    return counter;\r\n  }\r\n\r\n}\r\n```\r\n\r\n### 编译、部署、测试合约\r\n\r\n部署的时候需要在``migrations``目录新建``2_deploy_contracts.js``前面需要加上序号\r\n\r\n执行需要 具体文档有写 https://www.qikegu.com/docs/4798\r\n\r\n```bash\r\ntruffle compile\r\n\r\ntruffle migrate\r\n\r\ntruffle test\r\n```\r\n\r\n部署过程基本都大同小异(略过 不重复写了), 可以参考上文的资料进行部署\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<p> 2020-04-30 20:28:54</p>\n<h1 id=\"ethereum\">Ethereum</h1>\n<p>Ethereum study notes</p>\n<p>学习资料</p>\n<ul>\n<li><a href=\"https://ethereum.org/\">https://ethereum.org/</a></li>\n<li><a href=\"https://solidity.readthedocs.io/en/v0.6.6/introduction-to-smart-contracts.html\">https://solidity.readthedocs.io/en/v0.6.6/introduction-to-smart-contracts.html</a></li>\n<li><a href=\"https://www.qikegu.com/docs/4733\">https://www.qikegu.com/docs/4733</a></li>\n<li><a href=\"https://www.trufflesuite.com/tutorials/pet-shop\">https://www.trufflesuite.com/tutorials/pet-shop</a></li>\n</ul>\n<h2 id=\"总结一\">总结(一)</h2>\n<h3 id=\"配置本地的开发环境以及遇到的坑\">配置本地的开发环境以及遇到的坑</h3>\n<p>首先看看这里 <a href=\"https://ethereum.org/\">https://ethereum.org/</a></p>\n<p>然后开发可以参照这篇文章进行学习和实战 <a href=\"https://www.qikegu.com/docs/4733\">https://www.qikegu.com/docs/4733</a></p>\n<p>在<code>truffle init</code>的时候遇到一个connect x.x.x.x:443的错误</p>\n<p>官方给出来的答复是 GFW <code>It&#39;s all GFW&#39;s fault, when i crossed GFW, everything work.</code> <a href=\"https://github.com/trufflesuite/truffle/issues/2995\">issues/2995</a></p>\n<p>我目前的解决方案是直接clone <a href=\"https://github.com/truffle-box/bare-box\">repo</a>然后一些基本的目录都有了,然后在继续参考教程跑流程</p>\n<h2 id=\"总结二\">总结(二)</h2>\n<h3 id=\"本地部署多个项目的合约无法成功\">本地部署多个项目的合约无法成功</h3>\n<p>本地执行 <code>truffle compile</code> 显示是成功的</p>\n<p>执行 <code>truffle migrate</code> 显示是最新的</p>\n<p>但是实际在 <code>truffle console</code> || <code>truffle test</code> 里面调用时错误的</p>\n<p>解决方案是 <code>truffle migrate --reset</code> 增加 <code>--reset</code> !!!</p>\n<p>看到一篇文章有写到这个问题 <a href=\"https://www.jianshu.com/p/42479ede6730\">https://www.jianshu.com/p/42479ede6730</a> </p>\n<blockquote>\n<p>这个命令会执行所有migrations目录下的js文件。如果之前执行过truffle migrate命令，再次执行，只会部署新的js文件，如果没有新的js文件，不会起任何作用。如果使用--reset参数，则会重新的执行所有脚本的部署。truffle migrate --reset。</p>\n</blockquote>\n<h2 id=\"总结二-1\">总结(二)</h2>\n<h3 id=\"简单的计数器合约\">简单的计数器合约</h3>\n<h3 id=\"初始化项目\">初始化项目</h3>\n<p>因为本地<code>truffle init</code>有问题, 所以我这里采取<code>clone</code>的方式init, 具体步骤参考上文</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">git clone xxxxxx</code></pre><p>然后替换名字</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">mv xxx counter</code></pre><p>然后喜欢性的npm</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">npm init</code></pre><h3 id=\"新建计数器合约\">新建计数器合约</h3>\n<p>在<code>contracts</code>目录新建</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">touch Counter.sol</code></pre><pre class=\"language-js\"><code class=\"language-js\">pragma solidity <span class=\"token operator\">>=</span><span class=\"token number\">0.4</span><span class=\"token number\">.21</span> <span class=\"token operator\">&lt;</span><span class=\"token number\">0.7</span><span class=\"token number\">.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 声明</span>\ncontract Counter <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 声明计数器变量</span>\n  uint256 counter<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 部署时调用 初始化</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 增加方法</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    counter <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 返回counter uint256是类型</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> view <span class=\"token function\">returns</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> counter<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"编译、部署、测试合约\">编译、部署、测试合约</h3>\n<p>部署的时候需要在<code>migrations</code>目录新建<code>2_deploy_contracts.js</code>前面需要加上序号</p>\n<p>执行需要 具体文档有写 <a href=\"https://www.qikegu.com/docs/4798\">https://www.qikegu.com/docs/4798</a></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">truffle compile\n\ntruffle migrate\n\ntruffle test</code></pre><p>部署过程基本都大同小异(略过 不重复写了), 可以参考上文的资料进行部署</p>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}