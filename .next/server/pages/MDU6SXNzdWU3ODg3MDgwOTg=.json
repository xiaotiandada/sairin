{"pageProps":{"post":{"id":"MDU6SXNzdWU3ODg3MDgwOTg=","url":"https://github.com/xiaotiandada/blog/issues/14","title":"mpvue外卖小程序","updatedAt":"2022-05-10T08:34:25Z","createdAt":"2021-01-19T05:00:59Z","body":"2018-09-09 00:37:52\r\n\r\n\r\n# 前言\r\n\r\n首先说说为什么自己会想着写一个小程序emmmmmm 感觉没有为什么 就是想写了 我就干了~~~hhhhh\r\n\r\n我就粗略看了一下小程序的官方文档和mpvue的文档 然后就开撸了。 \r\n\r\n[项目仓库](https://github.com/xiaotiandada/takeaway) 欢迎start和pr哦~~\r\n\r\n为了节省大家的宝贵时间，不废话 直接进入正题；\r\n\r\n---\r\n\r\n\r\n\r\n<!-- more -->\r\n\r\n# 技术栈\r\n\r\n## mpvue\r\n\r\n[mpvue](http://mpvue.com/) 是一个使用 Vue.js 开发小程序的前端框架。框架基于 Vue.js......(可以看官网介绍~).\r\n\r\n## iview weapp\r\n\r\n[iview weapp ](https://weapp.iviewui.com/) 一套高质量的\r\n微信小程序 UI 组件库.\r\n\r\n# 界面展示\r\n\r\n![mpvue](https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue1.png)\r\n![mpvue](https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue2.png)\r\n![mpvue](https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue3.png)\r\n![mpvue](https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue4.png)\r\n![mpvue](https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue5.png)\r\n\r\n大概的界面就是这样(界面是模仿得饿了么 我也只会模仿点页面了hhhhh)\r\n\r\n# 完成进度\r\n\r\n- [x] 小程序的基本界面展示\r\n- [x] 简单的购买流程\r\n- [x] 使用全局状态保存部分数据\r\n- [x] 使用Fly请求数据\r\n- [x] 使用Easy-mock模拟数据\r\n- [x] ......\r\n- [ ] 没有数据库保存真实数据\r\n- [ ] 没有根据多个数据渲染店和商品\r\n- [ ] 没有做添加地址的数据校验等\r\n- [ ] 订单页面还需要优化 折叠显示等\r\n- [ ] 商家端还未开发\r\n- [ ] ......\r\n\r\n其实还有很多功能没写，因为这是刚开始上班没事做的时候撸的(所以兴趣才是最好的老师)，然后现在事情比较忙就可能先放下了 如果有大佬或者有时间的大佬可以帮忙完善或者pr emmm  你直接拿走再写也是可以的~\r\n\r\n# 技术实现\r\n\r\n技术实现过程和一些踩过的坑\r\n\r\n## 界面\r\n\r\n界面主要使用 iview weapp 组件库 然后 有一些组件库没有的自己原生写法来撸，这里还好没啥坑 但是在布局上面似乎有一个1px的问题 我好像没处理 不知道哪位大佬能发现 并且教我怎么解决~~ 单位主要使用小程序的rpx(很好用) 只需要根据iPhone6的尺寸来使用就可以了，详情可以看[官方文档](https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html).\r\n\r\niview weapp input 似乎不能使用双向数据绑定，需要自己重新撸.\r\n\r\n底部的tabBar我是用的json来配置的 省得自己写 方便\r\n\r\n```json\r\ntabBar: {\r\n      color: '#6f6f6f',\r\n      selectedColor: '#18a3ff',\r\n      backgroundColor: '#ffffff',\r\n      borderStyle: 'black',\r\n      list: [\r\n        {\r\n          pagePath: 'pages/index/main',\r\n          iconPath: 'static/img/wm.png',\r\n          selectedIconPath: 'static/img/wms.png',\r\n          text: '外卖'\r\n        },\r\n        {\r\n          pagePath: 'pages/order/main',\r\n          iconPath: 'static/img/dd.png',\r\n          selectedIconPath: 'static/img/dds.png',\r\n          text: '订单'\r\n        },\r\n        {\r\n          pagePath: 'pages/shopp/main',\r\n          iconPath: 'static/img/tj1.png',\r\n          selectedIconPath: 'static/img/tj1s.png',\r\n          text: '推荐'\r\n        },\r\n        {\r\n          pagePath: 'pages/user/main',\r\n          iconPath: 'static/img/user.png',\r\n          selectedIconPath: 'static/img/users.png',\r\n          text: '我的'\r\n        }\r\n      ]\r\n    }\r\n```\r\n\r\n这块的话可能需要大家查看小程序的文档来配置，其实也简单 跟玩一样就配置的非常好看\r\n\r\n可能最麻烦的也是很简单的一个坑 如何引入 其实iview weapp 官方文档写的很清楚了 但是只是大家不知道这么配置而已 我来扣个代码演示一下.\r\n\r\n到 GitHub 下载 iView Weapp 的代码，将 dist 目录拷贝到自己的项目中。然后按照如下的方式使用组件，以 Button 为例，其它组件在对应的文档页查看：\r\n\r\n```json\r\n1. 添加需要的组件 在页面的 json 中配置（路径根据自己项目位置配置）\r\n// 添加 config json\r\nexport default {\r\n  config: {\r\n    // 这儿添加要用的小程序组件\r\n    usingComponents: {\r\n      'i-button': '../../dist/button/index'\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\n```html\r\n2. 在 wxml 中使用组件\r\n<i-button type=\"primary\" bind:click=\"handleClick\">这是一个按钮</i-button>\r\n```\r\n\r\n是不是很简单！！！ 没看明白的也可以看我的[github](https://github.com/xiaotiandada/takeaway)仓库哦~\r\n\r\n界面这块大概就是这么多 也可能我写掉了 后续想起来我会更一下的hhhh(懒)\r\n\r\n\r\n## mpvue\r\n\r\nmpvue 新建页面需要重新 npm run dev 这个官方文档已经明确说明过了，由于一个页面只用重启一次 问题不大。\r\n\r\n小程序的请求似乎不能用axios 所以使用了Fly 来代替，至于为什么 可以看github里面的[issues](https://github.com/Meituan-Dianping/mpvue/issues/109)\r\n\r\nmpvue 支持小程序和vuejs的事件 详情可以[查看文档](http://mpvue.com/mpvue/#_13)\r\n\r\n然后可能最坑的就是页面转跳了吧... 其实官方文档有写 [目前页面路径最多只能十层。](https://developers.weixin.qq.com/miniprogram/dev/api/ui-navigate.html#wxnavigatetoobject) 比如说我再添加地址的时候 使用了wx.navigateTo(OBJECT) 然后返回到地址的列表页面然后继续重复添加地址 到达一定的数量之后 就不会再跳转，而且返回的也是之前重复的页面 用户体验很不好 所以需要一个解决的办法。文字太多可能看不懂 我来画个图。\r\n\r\n![mpvue](mpvue外卖小程序/mpvue6.png)\r\n\r\n关于登录一块的话 我没有做什么处理 直接用新的用户信息接口就可以了\r\n\r\n[小程序与小游戏获取用户信息接口调整](https://developers.weixin.qq.com/blogdetail?action=get_post_info&lang=zh_CN&token=1894828834&docid=0000a26e1aca6012e896a517556c01&idescene=6&devtools=1&idescene=6)\r\n\r\n```html\r\n<open-data type=\"groupName\" open-gid=\"xxxxxx\"></open-data>\r\n<open-data type=\"userAvatarUrl\"></open-data>\r\n<open-data type=\"userGender\" lang=\"zh_CN\"></open-data>\r\n```\r\n","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<p>2018-09-09 00:37:52</p>\n<h1 id=\"前言\">前言</h1>\n<p>首先说说为什么自己会想着写一个小程序emmmmmm 感觉没有为什么 就是想写了 我就干了~~~hhhhh</p>\n<p>我就粗略看了一下小程序的官方文档和mpvue的文档 然后就开撸了。 </p>\n<p><a href=\"https://github.com/xiaotiandada/takeaway\">项目仓库</a> 欢迎start和pr哦~~</p>\n<p>为了节省大家的宝贵时间，不废话 直接进入正题；</p>\n<hr>\n<!-- more -->\n\n<h1 id=\"技术栈\">技术栈</h1>\n<h2 id=\"mpvue\">mpvue</h2>\n<p><a href=\"http://mpvue.com/\">mpvue</a> 是一个使用 Vue.js 开发小程序的前端框架。框架基于 Vue.js......(可以看官网介绍~).</p>\n<h2 id=\"iview-weapp\">iview weapp</h2>\n<p><a href=\"https://weapp.iviewui.com/\">iview weapp </a> 一套高质量的\n微信小程序 UI 组件库.</p>\n<h1 id=\"界面展示\">界面展示</h1>\n<p><img src=\"https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue1.png\" alt=\"mpvue\">\n<img src=\"https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue2.png\" alt=\"mpvue\">\n<img src=\"https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue3.png\" alt=\"mpvue\">\n<img src=\"https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue4.png\" alt=\"mpvue\">\n<img src=\"https://github.com/xiaotiandada/takeaway/raw/master/doc/mpvue5.png\" alt=\"mpvue\"></p>\n<p>大概的界面就是这样(界面是模仿得饿了么 我也只会模仿点页面了hhhhh)</p>\n<h1 id=\"完成进度\">完成进度</h1>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 小程序的基本界面展示</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 简单的购买流程</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 使用全局状态保存部分数据</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 使用Fly请求数据</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 使用Easy-mock模拟数据</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> ......</li>\n<li><input disabled=\"\" type=\"checkbox\"> 没有数据库保存真实数据</li>\n<li><input disabled=\"\" type=\"checkbox\"> 没有根据多个数据渲染店和商品</li>\n<li><input disabled=\"\" type=\"checkbox\"> 没有做添加地址的数据校验等</li>\n<li><input disabled=\"\" type=\"checkbox\"> 订单页面还需要优化 折叠显示等</li>\n<li><input disabled=\"\" type=\"checkbox\"> 商家端还未开发</li>\n<li><input disabled=\"\" type=\"checkbox\"> ......</li>\n</ul>\n<p>其实还有很多功能没写，因为这是刚开始上班没事做的时候撸的(所以兴趣才是最好的老师)，然后现在事情比较忙就可能先放下了 如果有大佬或者有时间的大佬可以帮忙完善或者pr emmm  你直接拿走再写也是可以的~</p>\n<h1 id=\"技术实现\">技术实现</h1>\n<p>技术实现过程和一些踩过的坑</p>\n<h2 id=\"界面\">界面</h2>\n<p>界面主要使用 iview weapp 组件库 然后 有一些组件库没有的自己原生写法来撸，这里还好没啥坑 但是在布局上面似乎有一个1px的问题 我好像没处理 不知道哪位大佬能发现 并且教我怎么解决~~ 单位主要使用小程序的rpx(很好用) 只需要根据iPhone6的尺寸来使用就可以了，详情可以看<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html\">官方文档</a>.</p>\n<p>iview weapp input 似乎不能使用双向数据绑定，需要自己重新撸.</p>\n<p>底部的tabBar我是用的json来配置的 省得自己写 方便</p>\n<pre class=\"language-json\"><code class=\"language-json\">tabBar: {\n      color: '#6f6f6f',\n      selectedColor: '#18a3ff',\n      backgroundColor: '#ffffff',\n      borderStyle: 'black',\n      list: [\n        {\n          pagePath: 'pages/index/main',\n          iconPath: 'static/img/wm.png',\n          selectedIconPath: 'static/img/wms.png',\n          text: '外卖'\n        },\n        {\n          pagePath: 'pages/order/main',\n          iconPath: 'static/img/dd.png',\n          selectedIconPath: 'static/img/dds.png',\n          text: '订单'\n        },\n        {\n          pagePath: 'pages/shopp/main',\n          iconPath: 'static/img/tj1.png',\n          selectedIconPath: 'static/img/tj1s.png',\n          text: '推荐'\n        },\n        {\n          pagePath: 'pages/user/main',\n          iconPath: 'static/img/user.png',\n          selectedIconPath: 'static/img/users.png',\n          text: '我的'\n        }\n      ]\n    }</code></pre><p>这块的话可能需要大家查看小程序的文档来配置，其实也简单 跟玩一样就配置的非常好看</p>\n<p>可能最麻烦的也是很简单的一个坑 如何引入 其实iview weapp 官方文档写的很清楚了 但是只是大家不知道这么配置而已 我来扣个代码演示一下.</p>\n<p>到 GitHub 下载 iView Weapp 的代码，将 dist 目录拷贝到自己的项目中。然后按照如下的方式使用组件，以 Button 为例，其它组件在对应的文档页查看：</p>\n<pre class=\"language-json\"><code class=\"language-json\">1. 添加需要的组件 在页面的 json 中配置（路径根据自己项目位置配置）\n// 添加 config json\nexport default {\n  config: {\n    // 这儿添加要用的小程序组件\n    usingComponents: {\n      'i-button': '../../dist/button/index'\n    }\n  }\n}\n</code></pre><pre class=\"language-html\"><code class=\"language-html\">2. 在 wxml 中使用组件\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleClick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>这是一个按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i-button</span><span class=\"token punctuation\">></span></span></code></pre><p>是不是很简单！！！ 没看明白的也可以看我的<a href=\"https://github.com/xiaotiandada/takeaway\">github</a>仓库哦~</p>\n<p>界面这块大概就是这么多 也可能我写掉了 后续想起来我会更一下的hhhh(懒)</p>\n<h2 id=\"mpvue-1\">mpvue</h2>\n<p>mpvue 新建页面需要重新 npm run dev 这个官方文档已经明确说明过了，由于一个页面只用重启一次 问题不大。</p>\n<p>小程序的请求似乎不能用axios 所以使用了Fly 来代替，至于为什么 可以看github里面的<a href=\"https://github.com/Meituan-Dianping/mpvue/issues/109\">issues</a></p>\n<p>mpvue 支持小程序和vuejs的事件 详情可以<a href=\"http://mpvue.com/mpvue/#_13\">查看文档</a></p>\n<p>然后可能最坑的就是页面转跳了吧... 其实官方文档有写 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/ui-navigate.html#wxnavigatetoobject\">目前页面路径最多只能十层。</a> 比如说我再添加地址的时候 使用了wx.navigateTo(OBJECT) 然后返回到地址的列表页面然后继续重复添加地址 到达一定的数量之后 就不会再跳转，而且返回的也是之前重复的页面 用户体验很不好 所以需要一个解决的办法。文字太多可能看不懂 我来画个图。</p>\n<p><img src=\"mpvue%E5%A4%96%E5%8D%96%E5%B0%8F%E7%A8%8B%E5%BA%8F/mpvue6.png\" alt=\"mpvue\"></p>\n<p>关于登录一块的话 我没有做什么处理 直接用新的用户信息接口就可以了</p>\n<p><a href=\"https://developers.weixin.qq.com/blogdetail?action=get_post_info&amp;lang=zh_CN&amp;token=1894828834&amp;docid=0000a26e1aca6012e896a517556c01&amp;idescene=6&amp;devtools=1&amp;idescene=6\">小程序与小游戏获取用户信息接口调整</a></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>open-data</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>groupName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">open-gid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xxxxxx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>open-data</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>open-data</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userAvatarUrl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>open-data</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>open-data</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userGender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zh_CN<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>open-data</span><span class=\"token punctuation\">></span></span></code></pre>","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}