{"pageProps":{"post":{"id":"MDU6SXNzdWU3ODg3MDg2MzE=","url":"https://github.com/xiaotiandada/blog/issues/16","title":"React案列","updatedAt":"2021-01-19T05:02:25Z","createdAt":"2021-01-19T05:02:25Z","body":"2018-11-23 17:47:51\r\n\r\n# React案列\r\n\r\nReact 做的小案列\r\n\r\n> 记录学习笔记什么的~\r\n\r\n[仓库地址](https://github.com/xiaotiandada/react-case)\r\n\r\n[博客地址](https://xiaotiandada.github.io/)\r\n\r\n[学习资料-reactjs](https://reactjs.org/)\r\n\r\n[学习资料-imooc](https://www.imooc.com/)\r\n\r\n<!-- more -->\r\n\r\n\r\n\r\n## React案列一\r\n\r\n### 简易版-todoList\r\n\r\n```js\r\nimport React, { Component } from \"react\";\r\n// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\r\n  // 状态\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      list: [],  // 列表数据\r\n      inputValue: ''  // 输入框数据\r\n    }\r\n  }\r\n  \r\n  // 添加列表数据\r\n  addList(){\r\n    // es6 语法\r\n    this.setState({\r\n      list: [...this.state.list, this.state.inputValue],\r\n      inputValue: ''\r\n    })\r\n  }\r\n\r\n  // 改变inputValue\r\n  changeInput(e) {\r\n    // 目标值\r\n    let value = e.target.value\r\n    this.setState({\r\n      inputValue: value,\r\n    })\r\n  }\r\n\r\n  // 删除列表数据\r\n  delList(index) {\r\n    // 拷贝值 删除\r\n    let list = [...this.state.list]\r\n    list.splice(index, 1)\r\n    this.setState({\r\n      list\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div>\r\n        // 数据绑定  改变事件绑定this\r\n        <input value={this.state.inputValue} onChange={this.changeInput.bind(this)} type=\"text\"/>\r\n        // 添加事件 绑定this\r\n        <button onClick={this.addList.bind(this)}>添加</button>\r\n      </div>\r\n        <ul>\r\n        {\r\n          this.state.list.map((item,index) => {\r\n            return (\r\n              // 删除事件 绑定this 传index\r\n              <li key={index} onClick={this.delList.bind(this, index)}>{item}</li>\r\n            )\r\n          })\r\n        }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n```\r\n\r\n1. 事件，需要state里面的值需要绑定this\r\n\r\n``` js\r\nonClick={this.delList.bind(this, index)}\r\n```\r\n\r\n2. 改变state 需要用 this.setState\r\n\r\n``` js\r\nthis.setState({})\r\n```\r\n\r\n3. input 双向绑定数据 不用改变事件 输入框内容不会改变 并且警告报错\r\n\r\n``` js\r\n// 改变inputValue\r\nchangeInput(e) {\r\n  // 目标值\r\n  let value = e.target.value\r\n  this.setState({\r\n    inputValue: value,\r\n  })\r\n}\r\n\r\n<input value={this.state.inputValue} onChange={this.changeInput.bind(this)} type=\"text\"/>\r\n\r\n```\r\n\r\n> 刚刚搜了一下\r\n\r\n[ 参考文章 react中实现数据双向绑定](https://blog.csdn.net/qq_39081974/article/details/81007576)\r\n\r\n---\r\n\r\n## todoList 组件与通信\r\n\r\n``` js\r\n// 父组件\r\nimport React, { Component, Fragment } from \"react\";\r\nimport Item from './Item'\r\nclass App extends Component {\r\n  constructor(props){\r\n    // ...\r\n\r\n    // 绑定this 代码优化\r\n    this.addList = this.addList.bind(this)\r\n    this.changeInput = this.changeInput.bind(this)\r\n    this.delList = this.delList.bind(this)\r\n  }\r\n  \r\n  // ...\r\n  getHead() {\r\n    return (\r\n      <div>\r\n        <input value={this.state.inputValue} onChange={this.changeInput} type=\"text\"/>\r\n        <button onClick={this.addList}>添加</button>\r\n      </div>\r\n    ) \r\n  }\r\n\r\n  getItem() {\r\n    return (\r\n      this.state.list.map((item,index) => {\r\n        return (\r\n          <Item \r\n            delList={this.delList}    // 子组件调用父组件方法\r\n            key={index}               // 父组件通过属性传递值\r\n            content={item}            // 同\r\n            index={index}             // 同\r\n          />\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>                   // 忽略外层包裹的 div 页面不显示\r\n        {this.getHead()}           // 函数返回 head\r\n        <ul>{this.getItem()}</ul>  // 函数返回 Item\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// 子组件\r\nimport React, { Component } from \"react\";  // ...\r\n\r\nclass Item extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.delItem = this.delItem.bind(this)  // 同上\r\n  }\r\n\r\n  delItem(){\r\n    const {delList, index} = this.props  // 解构赋值\r\n    delList(index)                       // 调用父级方法\r\n  }\r\n\r\n  render() {\r\n    const { content } = this.props;     // 解构赋值\r\n    return (\r\n      <li onClick={this.delItem}>{content}</li>  // 调用删除方法\r\n    )\r\n  }\r\n}\r\n\r\nexport default Item\r\n\r\n```\r\n\r\n---\r\n\r\n### css 样式\r\n\r\n1.内样样式需要 \r\n\r\n``` js\r\nstyle={{'background': 'red','color': '#fff'}}\r\n```\r\n\r\n2. 定义类名不能用 class\r\n\r\n> 因为 class 已经用来 定义React组件\r\n\r\n```js\r\nclassName='head-button'\r\n```\r\n\r\nQq：952822399 \r\n\r\nQq群 iD 718639024\r\n\r\n大家也可以进来互相交流~\r\n\r\n最后就是厚脸皮的一步(觉得不错可以点个star哦~~~) [仓库地址](https://github.com/xiaotiandada/E-video)\r\n\r\n同时也欢迎Pr！！！\r\n\r\n同时也欢迎Pr！！！\r\n\r\n同时也欢迎Pr！！！","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<p>2018-11-23 17:47:51</p>\n<h1 id=\"react案列\">React案列</h1>\n<p>React 做的小案列</p>\n<blockquote>\n<p>记录学习笔记什么的~</p>\n</blockquote>\n<p><a href=\"https://github.com/xiaotiandada/react-case\">仓库地址</a></p>\n<p><a href=\"https://xiaotiandada.github.io/\">博客地址</a></p>\n<p><a href=\"https://reactjs.org/\">学习资料-reactjs</a></p>\n<p><a href=\"https://www.imooc.com/\">学习资料-imooc</a></p>\n<!-- more -->\n\n\n\n<h2 id=\"react案列一\">React案列一</h2>\n<h3 id=\"简易版-todolist\">简易版-todoList</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// import logo from \"./logo.svg\";</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./App.css\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// 状态</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">list</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 列表数据</span>\n      <span class=\"token literal-property property\">inputValue</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>  <span class=\"token comment\">// 输入框数据</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">// 添加列表数据</span>\n  <span class=\"token function\">addList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// es6 语法</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">list</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>inputValue<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">inputValue</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 改变inputValue</span>\n  <span class=\"token function\">changeInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 目标值</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">inputValue</span><span class=\"token operator\">:</span> value<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 删除列表数据</span>\n  <span class=\"token function\">delList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 拷贝值 删除</span>\n    <span class=\"token keyword\">let</span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">]</span>\n    list<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      list\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token comment\">// 数据绑定  改变事件绑定this</span>\n        <span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>inputValue<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeInput</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token comment\">// 添加事件 绑定this</span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addList</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>添加<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span>index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token comment\">// 删除事件 绑定this 传index</span>\n              <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">delList</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span>\n</code></pre><ol>\n<li>事件，需要state里面的值需要绑定this</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\">onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">delList</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre><ol start=\"2\">\n<li>改变state 需要用 this.setState</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><ol start=\"3\">\n<li>input 双向绑定数据 不用改变事件 输入框内容不会改变 并且警告报错</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 改变inputValue</span>\n<span class=\"token function\">changeInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 目标值</span>\n  <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">inputValue</span><span class=\"token operator\">:</span> value<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>inputValue<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeInput</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre><blockquote>\n<p>刚刚搜了一下</p>\n</blockquote>\n<p><a href=\"https://blog.csdn.net/qq_39081974/article/details/81007576\"> 参考文章 react中实现数据双向绑定</a></p>\n<hr>\n<h2 id=\"todolist-组件与通信\">todoList 组件与通信</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 父组件</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> Fragment <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Item <span class=\"token keyword\">from</span> <span class=\"token string\">'./Item'</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// 绑定this 代码优化</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>addList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addList</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>changeInput <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeInput</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>delList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">delList</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">getHead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>inputValue<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>changeInput<span class=\"token punctuation\">}</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>addList<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>添加<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span>index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>Item \n            delList<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>delList<span class=\"token punctuation\">}</span>    <span class=\"token comment\">// 子组件调用父组件方法</span>\n            key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span>               <span class=\"token comment\">// 父组件通过属性传递值</span>\n            content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span>            <span class=\"token comment\">// 同</span>\n            index<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span>             <span class=\"token comment\">// 同</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Fragment<span class=\"token operator\">></span>                   <span class=\"token comment\">// 忽略外层包裹的 div 页面不显示</span>\n        <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>           <span class=\"token comment\">// 函数返回 head</span>\n        <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>  <span class=\"token comment\">// 函数返回 Item</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Fragment<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 子组件</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>delItem <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">delItem</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 同上</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">delItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>delList<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props  <span class=\"token comment\">// 解构赋值</span>\n    <span class=\"token function\">delList</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span>                       <span class=\"token comment\">// 调用父级方法</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> content <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 解构赋值</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>li onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>delItem<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>  <span class=\"token comment\">// 调用删除方法</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Item\n</code></pre><hr>\n<h3 id=\"css-样式\">css 样式</h3>\n<p>1.内样样式需要 </p>\n<pre class=\"language-js\"><code class=\"language-js\">style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">'background'</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">'color'</span><span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre><ol start=\"2\">\n<li>定义类名不能用 class</li>\n</ol>\n<blockquote>\n<p>因为 class 已经用来 定义React组件</p>\n</blockquote>\n<pre class=\"language-js\"><code class=\"language-js\">className<span class=\"token operator\">=</span><span class=\"token string\">'head-button'</span></code></pre><p>Qq：952822399 </p>\n<p>Qq群 iD 718639024</p>\n<p>大家也可以进来互相交流~</p>\n<p>最后就是厚脸皮的一步(觉得不错可以点个star哦~~~) <a href=\"https://github.com/xiaotiandada/E-video\">仓库地址</a></p>\n<p>同时也欢迎Pr！！！</p>\n<p>同时也欢迎Pr！！！</p>\n<p>同时也欢迎Pr！！！</p>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}