{"pageProps":{"post":{"id":"MDU6SXNzdWU3ODg3MDY0MTc=","url":"https://github.com/xiaotiandada/blog/issues/5","title":"vue-lottie动画效果","updatedAt":"2021-01-19T04:56:23Z","createdAt":"2021-01-19T04:56:23Z","body":"2018-06-06 18:45:38\r\n\r\n### vue-lottie动画效果\r\n\r\n[仓库地址](https://github.com/xiaotiandada/Case/tree/master/Anime/sanDemo)\r\n\r\n[模仿demo](https://xiaotiandada.github.io/Case/Anime/sanDemo/app/)\r\n\r\n[blog](https://xiaotiandada.github.io/)\r\n\r\n[掘金](https://juejin.im/post/5aff09ee6fb9a07a9b36365b)\r\n\r\n用lottie的好处有很多(.......此处省略ｎ字) 简单来说就是简单高效的还原设计的动画效果\r\n\r\n然后在个人项目使用vue-lottie　分享一些小小经验吧\r\n\r\n废话不多说～～～ (正经分割线)\r\n\r\n<!-- more -->\r\n\r\n---\r\n\r\n### 分析官方demo\r\n\r\n先来一个简单的尝尝鲜\r\n\r\n[vue-lottie仓库](https://github.com/chenqingspring/vue-lottie)\r\n\r\n[vue-lottie demo](https://chenqingspring.github.io/vue-lottie/)\r\n\r\n打开仓库可以看见很多很棒的效果（nice\r\n\r\n\r\n#### Installation\r\n\r\n```bash\r\nnpm install --save vue-lottie\r\n```\r\n\r\n#### Usage\r\n\r\n``` bash\r\n<template>\r\n    <div id=\"app\">\r\n        <lottie :options=\"defaultOptions\" :height=\"400\" :width=\"400\" v-on:animCreated=\"handleAnimation\"/>\r\n        <div>\r\n            <p>Speed: x{{animationSpeed}}</p>\r\n            <input type=\"range\" value=\"1\" min=\"0\" max=\"3\" step=\"0.5\"\r\n                   v-on:change=\"onSpeedChange\" v-model=\"animationSpeed\">\r\n        </div>\r\n        <button v-on:click=\"stop\">stop</button>\r\n        <button v-on:click=\"pause\">pause</button>\r\n        <button v-on:click=\"play\">play</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import Lottie from './lottie.vue';\r\n  import * as animationData from './assets/pinjump.json';\r\n\r\n  export default {\r\n    name: 'app',\r\n    components: {\r\n      'lottie': Lottie\r\n    },\r\n    data() {\r\n      return {\r\n        defaultOptions: {animationData: animationData},\r\n        animationSpeed: 1\r\n      }\r\n    },\r\n    methods: {\r\n      handleAnimation: function (anim) {\r\n        this.anim = anim;\r\n      },\r\n\r\n      stop: function () {\r\n        this.anim.stop();\r\n      },\r\n\r\n      play: function () {\r\n        this.anim.play();\r\n      },\r\n\r\n      pause: function () {\r\n        this.anim.pause();\r\n      },\r\n\r\n      onSpeedChange: function () {\r\n        this.anim.setSpeed(this.animationSpeed);\r\n      }\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n这是之前官方给的demo代码　基本上和平时使用没啥不一样(所以只需要复制粘贴就ok了)\r\n\r\n```bash\r\n# json 动画效果AE转json后的文件\r\nimport * as animationData from './assets/pinjump.json';\r\n```\r\n\r\n引入的json需要改！！！\r\n\r\n```bash\r\n# 这里引入了　lottie组件\r\nimport Lottie from './lottie.vue';\r\n```\r\n\r\n```bash\r\n# lottie.vue\r\n<template>\r\n    <div :style=\"style\" ref=\"lavContainer\"></div>\r\n</template>\r\n\r\n<script>\r\n  import lottie from 'lottie-web'\r\nexport default {\r\n    props: {\r\n      options: {\r\n        type: Object,\r\n        required: true\r\n      },\r\n      height: Number,\r\n      width: Number\r\n    },\r\n    data() {\r\n      return {\r\n        style: {\r\n          width: this.width ? `${this.width}px` : '100%',\r\n          height: this.height ? `${this.height}px` : '100%',\r\n          overflow: 'hidden',\r\n          margin: '0 auto'\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.anim = lottie.loadAnimation({\r\n        container: this.$refs.lavContainer,\r\n        renderer: 'svg',\r\n        loop: this.options.loop !== false,\r\n        autoplay: this.options.autoplay !== false,\r\n        animationData: this.options.animationData,\r\n        rendererSettings: this.options.rendererSettings\r\n      }\r\n      )\r\n      this.$emit('animCreated', this.anim)\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n然后会发现还是有错误(缺少组件！)　其实很简单啦，打开仓库进入src然后打开lottle组件然后复制过去就ok啦hhh(简单)\r\n\r\n![效果图](vue-lottie动画效果/one.png)\r\n\r\n这是效果图（是不是很简单２３３\r\n\r\n### 使用别的json文件\r\n\r\n官方给给了一个很好的效果网站　[地址](https://www.lottiefiles.com/)\r\n\r\n下载json文件　然后更换引入的json\r\n\r\n```bash\r\n# json 动画效果AE转json后的文件\r\nimport * as animationData from './assets/blood_transfusion_kawaii.json.json';\r\n\r\n```\r\n\r\n![效果图](vue-lottie动画效果/two.png)\r\n\r\n是不是也很简单！！！\r\n\r\n\r\n### 使用vue-lottie模仿san官网的动画效果\r\n\r\n先来效果图～～～\r\n\r\n![效果图](vue-lottie动画效果/three.png)\r\n\r\n因为有多个需要用到lottie动画，想了半天不知道怎么解决调用方法的问题　最后想了一个简单的方法\r\n\r\n直接将每一个动画抽到一个组件　组件内依然用之前的方法（稍微改造一下就行\r\n\r\n然后利用父子组件传数据的形式传递json文件　子组件props接收\r\n\r\n```bash\r\n# html\r\n<template>\r\n  <div class=\"card-panel\" @mouseenter=\"lottiePlay\" @mouseleave=\"lottieStop\">\r\n    <div class=\"card-panel-icon-wrapper icon-shoppingCard\">\r\n      <lottie :options=\"defaultOptions\" :height=\"80\" :width=\"80\" v-on:animCreated=\"handleAnimation\" />\r\n    </div>\r\n    <div class=\"card-panel-description\">\r\n      <div class=\"card-panel-text\">今日活跃</div>\r\n      <div class=\"card-panel-num\">2600</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n```\r\n\r\n```bash\r\n# props\r\nprops: {\r\n    animationDataPath: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n  return {\r\n    defaultOptions: {\r\n      // animationData: animationDataPath,\r\n      animationData: this.animationDataPath,\r\n      autoplay: false,  # 不自动播放\r\n      loop: false　　　　　# 不循环\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```bash\r\n# 事件调用\r\n@mouseenter=\"lottiePlay\" @mouseleave=\"lottieStop\"\r\n\r\nlottiePlay: function() {\r\n  this.anim.play()\r\n},\r\nlottieStop: function() {\r\n  this.anim.stop()\r\n}\r\n```\r\n\r\n然后就到了父组件传数据\r\n\r\n```bash\r\n# 父组件\r\n<panel-lottie :animationDataPath=\"animationDataPathOne\"></panel-lottie>\r\n\r\nanimationDataPathOne: require('../../../public/json/compass.json')\r\n```\r\n\r\n自己用到了require引入json　然后打包出来　一样可以正常运行　如果大家有很好的方法可以教我！我好学习学习\r\n\r\n---\r\n\r\nemmmmm　大概就是这么多吧～\r\n\r\n如果实在需要这个的源码可以打开我的github仓库　由于项目还是一个半成品　所以地址就放在最后面了\r\n\r\n[vue-lottie源码](https://github.com/xiaotiandada/My-music/tree/master/client/src/views/admin/About)\r\n\r\n[项目地址](https://github.com/xiaotiandada/My-music)\r\n\r\n> 如果大家觉得不错的话　可以点star哦（厚脸皮２３３","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<p>2018-06-06 18:45:38</p>\n<h3 id=\"vue-lottie动画效果\">vue-lottie动画效果</h3>\n<p><a href=\"https://github.com/xiaotiandada/Case/tree/master/Anime/sanDemo\">仓库地址</a></p>\n<p><a href=\"https://xiaotiandada.github.io/Case/Anime/sanDemo/app/\">模仿demo</a></p>\n<p><a href=\"https://xiaotiandada.github.io/\">blog</a></p>\n<p><a href=\"https://juejin.im/post/5aff09ee6fb9a07a9b36365b\">掘金</a></p>\n<p>用lottie的好处有很多(.......此处省略ｎ字) 简单来说就是简单高效的还原设计的动画效果</p>\n<p>然后在个人项目使用vue-lottie　分享一些小小经验吧</p>\n<p>废话不多说～～～ (正经分割线)</p>\n<!-- more -->\n\n<hr>\n<h3 id=\"分析官方demo\">分析官方demo</h3>\n<p>先来一个简单的尝尝鲜</p>\n<p><a href=\"https://github.com/chenqingspring/vue-lottie\">vue-lottie仓库</a></p>\n<p><a href=\"https://chenqingspring.github.io/vue-lottie/\">vue-lottie demo</a></p>\n<p>打开仓库可以看见很多很棒的效果（nice</p>\n<h4 id=\"installation\">Installation</h4>\n<pre class=\"language-bash\"><code class=\"language-bash\">npm install --save vue-lottie</code></pre><h4 id=\"usage\">Usage</h4>\n<pre class=\"language-bash\"><code class=\"language-bash\"><template>\n    <div id=\"app\">\n        <lottie :options=\"defaultOptions\" :height=\"400\" :width=\"400\" v-on:animCreated=\"handleAnimation\"/>\n        <div>\n            <p>Speed: x{{animationSpeed}}</p>\n            <input type=\"range\" value=\"1\" min=\"0\" max=\"3\" step=\"0.5\"\n                   v-on:change=\"onSpeedChange\" v-model=\"animationSpeed\">\n        </div>\n        <button v-on:click=\"stop\">stop</button>\n        <button v-on:click=\"pause\">pause</button>\n        <button v-on:click=\"play\">play</button>\n    </div>\n</template>\n\n<script>\n  import Lottie from './lottie.vue';\n  import * as animationData from './assets/pinjump.json';\n\n  export default {\n    name: 'app',\n    components: {\n      'lottie': Lottie\n    },\n    data() {\n      return {\n        defaultOptions: {animationData: animationData},\n        animationSpeed: 1\n      }\n    },\n    methods: {\n      handleAnimation: function (anim) {\n        this.anim = anim;\n      },\n\n      stop: function () {\n        this.anim.stop();\n      },\n\n      play: function () {\n        this.anim.play();\n      },\n\n      pause: function () {\n        this.anim.pause();\n      },\n\n      onSpeedChange: function () {\n        this.anim.setSpeed(this.animationSpeed);\n      }\n    }\n  }\n</script></code></pre><p>这是之前官方给的demo代码　基本上和平时使用没啥不一样(所以只需要复制粘贴就ok了)</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"># json 动画效果AE转json后的文件\nimport * as animationData from './assets/pinjump.json';</code></pre><p>引入的json需要改！！！</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"># 这里引入了　lottie组件\nimport Lottie from './lottie.vue';</code></pre><pre class=\"language-bash\"><code class=\"language-bash\"># lottie.vue\n<template>\n    <div :style=\"style\" ref=\"lavContainer\"></div>\n</template>\n\n<script>\n  import lottie from 'lottie-web'\nexport default {\n    props: {\n      options: {\n        type: Object,\n        required: true\n      },\n      height: Number,\n      width: Number\n    },\n    data() {\n      return {\n        style: {\n          width: this.width ? `${this.width}px` : '100%',\n          height: this.height ? `${this.height}px` : '100%',\n          overflow: 'hidden',\n          margin: '0 auto'\n        }\n      }\n    },\n    mounted() {\n      this.anim = lottie.loadAnimation({\n        container: this.$refs.lavContainer,\n        renderer: 'svg',\n        loop: this.options.loop !== false,\n        autoplay: this.options.autoplay !== false,\n        animationData: this.options.animationData,\n        rendererSettings: this.options.rendererSettings\n      }\n      )\n      this.$emit('animCreated', this.anim)\n    }\n  }\n</script></code></pre><p>然后会发现还是有错误(缺少组件！)　其实很简单啦，打开仓库进入src然后打开lottle组件然后复制过去就ok啦hhh(简单)</p>\n<p><img src=\"vue-lottie%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/one.png\" alt=\"效果图\"></p>\n<p>这是效果图（是不是很简单２３３</p>\n<h3 id=\"使用别的json文件\">使用别的json文件</h3>\n<p>官方给给了一个很好的效果网站　<a href=\"https://www.lottiefiles.com/\">地址</a></p>\n<p>下载json文件　然后更换引入的json</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"># json 动画效果AE转json后的文件\nimport * as animationData from './assets/blood_transfusion_kawaii.json.json';\n</code></pre><p><img src=\"vue-lottie%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/two.png\" alt=\"效果图\"></p>\n<p>是不是也很简单！！！</p>\n<h3 id=\"使用vue-lottie模仿san官网的动画效果\">使用vue-lottie模仿san官网的动画效果</h3>\n<p>先来效果图～～～</p>\n<p><img src=\"vue-lottie%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/three.png\" alt=\"效果图\"></p>\n<p>因为有多个需要用到lottie动画，想了半天不知道怎么解决调用方法的问题　最后想了一个简单的方法</p>\n<p>直接将每一个动画抽到一个组件　组件内依然用之前的方法（稍微改造一下就行</p>\n<p>然后利用父子组件传数据的形式传递json文件　子组件props接收</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"># html\n<template>\n  <div class=\"card-panel\" @mouseenter=\"lottiePlay\" @mouseleave=\"lottieStop\">\n    <div class=\"card-panel-icon-wrapper icon-shoppingCard\">\n      <lottie :options=\"defaultOptions\" :height=\"80\" :width=\"80\" v-on:animCreated=\"handleAnimation\" />\n    </div>\n    <div class=\"card-panel-description\">\n      <div class=\"card-panel-text\">今日活跃</div>\n      <div class=\"card-panel-num\">2600</div>\n    </div>\n  </div>\n</template></code></pre><pre class=\"language-bash\"><code class=\"language-bash\"># props\nprops: {\n    animationDataPath: {\n      type: Object,\n      default: null\n    }\n  },\n  data() {\n  return {\n    defaultOptions: {\n      // animationData: animationDataPath,\n      animationData: this.animationDataPath,\n      autoplay: false,  # 不自动播放\n      loop: false　　　　　# 不循环\n    }\n  }\n}</code></pre><pre class=\"language-bash\"><code class=\"language-bash\"># 事件调用\n@mouseenter=\"lottiePlay\" @mouseleave=\"lottieStop\"\n\nlottiePlay: function() {\n  this.anim.play()\n},\nlottieStop: function() {\n  this.anim.stop()\n}</code></pre><p>然后就到了父组件传数据</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"># 父组件\n<panel-lottie :animationDataPath=\"animationDataPathOne\"></panel-lottie>\n\nanimationDataPathOne: require('../../../public/json/compass.json')</code></pre><p>自己用到了require引入json　然后打包出来　一样可以正常运行　如果大家有很好的方法可以教我！我好学习学习</p>\n<hr>\n<p>emmmmm　大概就是这么多吧～</p>\n<p>如果实在需要这个的源码可以打开我的github仓库　由于项目还是一个半成品　所以地址就放在最后面了</p>\n<p><a href=\"https://github.com/xiaotiandada/My-music/tree/master/client/src/views/admin/About\">vue-lottie源码</a></p>\n<p><a href=\"https://github.com/xiaotiandada/My-music\">项目地址</a></p>\n<blockquote>\n<p>如果大家觉得不错的话　可以点star哦（厚脸皮２３３</p>\n</blockquote>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}