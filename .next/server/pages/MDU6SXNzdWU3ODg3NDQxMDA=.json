{"pageProps":{"post":{"id":"MDU6SXNzdWU3ODg3NDQxMDA=","url":"https://github.com/xiaotiandada/blog/issues/30","title":"node mysql 增删改查【简易版】","updatedAt":"2021-01-19T06:24:47Z","createdAt":"2021-01-19T06:24:47Z","body":"2019-09-02 14:35:40\r\n\r\n学习 node mysql, 然后做了一些简单的增删改查, 小小总结总结 Go!!!\r\n\r\n<!-- more -->\r\n\r\n资料: https://www.oschina.net/translate/using-node-mysql-javascript-client\r\n\r\n## init\r\n\r\n使用 express 初始化\r\n\r\n``` js\r\nconst express = require('express')\r\nconst app = express()\r\n\r\napp.use('/', (req, res) => {\r\n  res.send(`hello world`)\r\n})\r\n\r\napp.listen(3000, () => console.log('port in 3000'))\r\n\r\n```\r\n\r\n懒得截图, 运行localhost:3000 就能看到hello world (擅长输出hello world 233)\r\n\r\n然后添加了nodemon 自动重启\r\n\r\n```js\r\nyarn add nodemon -D\r\n\r\n// package\r\n\r\n\"dev\": \"nodemon index.js\"\r\n\r\nyarn dev\r\n```\r\n\r\n方便\r\n\r\n## mysql\r\n\r\nnpm mysql\r\n\r\n文档: https://www.npmjs.com/package/mysql\r\n\r\n```js\r\nvar mysql      = require('mysql');\r\nvar connection = mysql.createConnection({\r\n  host     : 'localhost',\r\n  user     : 'me',\r\n  password : 'secret',\r\n  database : 'my_db'\r\n});\r\nconnection.connect();\r\n\r\nconnection.query('SELECT 1 + 1 AS solution', function (error, results, fields) {\r\n  if (error) throw error;\r\n  console.log('The solution is: ', results[0].solution);\r\n});\r\n\r\nconnection.end();\r\n```\r\n\r\n上面需要根据实际情况修改, 比如说账号密码数据库\r\n\r\n数据库我是用 Tool 创建的(不会终端命令 我真垃圾)\r\n\r\n- navicat premium 有免费试用时间\r\n\r\n然后mysql我是用 brew 下载的 (方便)\r\n\r\n```\r\nbrew install mysql\r\n```\r\n\r\n这里遇到一个问题\r\n\r\n```\r\nError: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client\r\n```\r\n\r\n解决方案:\r\nhttps://stackoverflow.com/questions/50093144/mysql-8-0-client-does-not-support-authentication-protocol-requested-by-server\r\n\r\n## 增\r\n\r\n**数据新建了一个image, 设置主键ID key 自增**\r\n\r\n```js\r\n// 插入数据 id自增\r\nconst sqlAdd = () => {\r\n  // posts 表名\r\n  let sqlAdd = 'INSERT INTO image SET ?';\r\n  let sqlAddJson = {\r\n    url: Math.floor(Math.random()*100) + '我是url',\r\n    title: Math.floor(Math.random()*100) + '我是标题'\r\n  }\r\n  connection.query(sqlAdd, sqlAddJson, (err,res) => {\r\n    if(err) return console.log('INSERT INFO ERROR:',err.message);\r\n    console.log('INSERT INFO', res.insertId);\r\n  });\r\n}\r\n// sqlAdd()\r\n\r\n```\r\n\r\n## 删\r\n\r\n```js\r\n// 删除数据 id\r\nconst sqlDelete = id => {\r\n  // 通过id查询\r\n  let sql = `DELETE FROM image WHERE id = ?`;\r\n  connection.query(sql, [id] , (err,res) => {\r\n    if(err) console.log('[DELETE ERROR]:',err.message);\r\n    console.log('DELETE', res.affectedRows);\r\n  });\r\n}\r\n// sqlDelete(2)\r\n```\r\n\r\n## 改\r\n\r\n```js\r\n// 更新数据 id\r\nconst sqlUpdate = id => {\r\n  let sqlAddJson = {\r\n    url: Math.floor(Math.random()*100) + '我是url',\r\n    title: Math.floor(Math.random()*100) + '我是标题'\r\n  }\r\n  // 需要改的数据和查询id\r\n  let sqlAdd = `UPDATE image SET url = ?, title = ? WHERE id = ?`;\r\n  connection.query(sqlAdd, [sqlAddJson.url, sqlAddJson.title, id], (err,res) => {\r\n    if(err) return console.log('UPDATE ERROR:',err.message);\r\n    console.log('UPDATE', res.changedRows);\r\n  });\r\n}\r\n// sqlUpdate(2)\r\n```\r\n\r\n## 查\r\n\r\n```js\r\n// 查询数据\r\nconst sqlSelect = () => {\r\n  // 查询那个表\r\n  let sql = 'SELECT * FROM image';\r\n  connection.query(sql,  (err,result) => {\r\n    if(err) console.log('[SELECT ERROR]:',err.message);\r\n    console.log('result', JSON.stringify(result));  //数据库查询结果返回到result中\r\n  });\r\n}\r\n// sqlSelect()\r\n```\r\n\r\n## end\r\n\r\n很简易的增删改查 嘿嘿","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<p>2019-09-02 14:35:40</p>\n<p>学习 node mysql, 然后做了一些简单的增删改查, 小小总结总结 Go!!!</p>\n<!-- more -->\n\n<p>资料: <a href=\"https://www.oschina.net/translate/using-node-mysql-javascript-client\">https://www.oschina.net/translate/using-node-mysql-javascript-client</a></p>\n<h2 id=\"init\">init</h2>\n<p>使用 express 初始化</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hello world</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'port in 3000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre><p>懒得截图, 运行localhost:3000 就能看到hello world (擅长输出hello world 233)</p>\n<p>然后添加了nodemon 自动重启</p>\n<pre class=\"language-js\"><code class=\"language-js\">yarn add nodemon <span class=\"token operator\">-</span><span class=\"token constant\">D</span>\n\n<span class=\"token comment\">// package</span>\n\n<span class=\"token string-property property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon index.js\"</span>\n\nyarn dev</code></pre><p>方便</p>\n<h2 id=\"mysql\">mysql</h2>\n<p>npm mysql</p>\n<p>文档: <a href=\"https://www.npmjs.com/package/mysql\">https://www.npmjs.com/package/mysql</a></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> mysql      <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mysql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> connection <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">.</span><span class=\"token function\">createConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">host</span>     <span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">user</span>     <span class=\"token operator\">:</span> <span class=\"token string\">'me'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">password</span> <span class=\"token operator\">:</span> <span class=\"token string\">'secret'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">database</span> <span class=\"token operator\">:</span> <span class=\"token string\">'my_db'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconnection<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconnection<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT 1 + 1 AS solution'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">,</span> fields</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The solution is: '</span><span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconnection<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>上面需要根据实际情况修改, 比如说账号密码数据库</p>\n<p>数据库我是用 Tool 创建的(不会终端命令 我真垃圾)</p>\n<ul>\n<li>navicat premium 有免费试用时间</li>\n</ul>\n<p>然后mysql我是用 brew 下载的 (方便)</p>\n<pre><code>brew install mysql</code></pre><p>这里遇到一个问题</p>\n<pre><code>Error: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client</code></pre><p>解决方案:\n<a href=\"https://stackoverflow.com/questions/50093144/mysql-8-0-client-does-not-support-authentication-protocol-requested-by-server\">https://stackoverflow.com/questions/50093144/mysql-8-0-client-does-not-support-authentication-protocol-requested-by-server</a></p>\n<h2 id=\"增\">增</h2>\n<p><strong>数据新建了一个image, 设置主键ID key 自增</strong></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 插入数据 id自增</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sqlAdd</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// posts 表名</span>\n  <span class=\"token keyword\">let</span> sqlAdd <span class=\"token operator\">=</span> <span class=\"token string\">'INSERT INTO image SET ?'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> sqlAddJson <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'我是url'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'我是标题'</span>\n  <span class=\"token punctuation\">}</span>\n  connection<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>sqlAdd<span class=\"token punctuation\">,</span> sqlAddJson<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'INSERT INFO ERROR:'</span><span class=\"token punctuation\">,</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'INSERT INFO'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>insertId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// sqlAdd()</span>\n</code></pre><h2 id=\"删\">删</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 删除数据 id</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sqlDelete</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 通过id查询</span>\n  <span class=\"token keyword\">let</span> sql <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">DELETE FROM image WHERE id = ?</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  connection<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[DELETE ERROR]:'</span><span class=\"token punctuation\">,</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>affectedRows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// sqlDelete(2)</span></code></pre><h2 id=\"改\">改</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 更新数据 id</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sqlUpdate</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> sqlAddJson <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'我是url'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'我是标题'</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 需要改的数据和查询id</span>\n  <span class=\"token keyword\">let</span> sqlAdd <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">UPDATE image SET url = ?, title = ? WHERE id = ?</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  connection<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>sqlAdd<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>sqlAddJson<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> sqlAddJson<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'UPDATE ERROR:'</span><span class=\"token punctuation\">,</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'UPDATE'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>changedRows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// sqlUpdate(2)</span></code></pre><h2 id=\"查\">查</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 查询数据</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sqlSelect</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 查询那个表</span>\n  <span class=\"token keyword\">let</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">'SELECT * FROM image'</span><span class=\"token punctuation\">;</span>\n  connection<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[SELECT ERROR]:'</span><span class=\"token punctuation\">,</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'result'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//数据库查询结果返回到result中</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// sqlSelect()</span></code></pre><h2 id=\"end\">end</h2>\n<p>很简易的增删改查 嘿嘿</p>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}