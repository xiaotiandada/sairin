{"pageProps":{"post":{"id":"I_kwDOD_pKSM5H7CXe","url":"https://github.com/xiaotiandada/blog/issues/99","title":"Nest","updatedAt":"2022-06-07T13:55:53Z","createdAt":"2022-04-18T04:47:31Z","body":"## class-validator\r\n- [class-validator 校验器的使用](https://juejin.cn/post/7083505497021612068)\r\n\r\n## ValidationPipe\r\n> https://docs.nestjs.com/techniques/validation#stripping-properties\r\n> http://static.kancloud.cn/juukee/nestjs/2675355\r\n> https://juejin.cn/post/7064595876680826910\r\n### transform\r\n```ts\r\napp.useGlobalPipes(\r\n    new ValidationPipe({\r\n      transform: true,\r\n    }),\r\n);\r\n ```\r\n \r\n ```ts\r\n@Get(':id')\r\nfindOne(@Param('id') id: number) {\r\n  console.log(typeof id === 'number'); // true\r\n  return 'This action returns a user';\r\n}\r\n```\r\n \r\n id 会自动从 string 转换成 number\r\n\r\n### whitelist\r\n```ts\r\napp.useGlobalPipes(\r\n    new ValidationPipe({\r\n      whitelist: true,\r\n    }),\r\n);\r\n ```\r\n \r\ntrue 时，自动删除非白名单属性(在验证类中没有任何修饰符的属性)。\r\n\r\n```ts\r\n// Bad\r\n// 所有参数都将被过滤\r\nexport class CreateCatDto {\r\n  public name: string;\r\n\r\n  public age: number;\r\n  \r\n  public breed: string;\r\n}\r\n\r\n\r\n// Good\r\nimport { IsNumber, IsString } from 'class-validator';\r\n\r\nexport class CreateCatDto {\r\n  @IsString()\r\n  public name: string;\r\n\r\n  @IsNumber()\r\n  public age: number;\r\n\r\n  @IsString()\r\n  public breed: string;\r\n}\r\n```\r\n\r\n\r\n### typeorm\r\n\r\n```bash\r\n    \"typeorm\": \"^0.3.6\",\r\n    \"typeorm\": \"0.2.45\",\r\n```\r\n\r\n0.3.x 按照文档无法工作\r\n0.2.x 按照文档正常工作\r\n","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<h2 id=\"class-validator\">class-validator</h2>\n<ul>\n<li><a href=\"https://juejin.cn/post/7083505497021612068\">class-validator 校验器的使用</a></li>\n</ul>\n<h2 id=\"validationpipe\">ValidationPipe</h2>\n<blockquote>\n<p><a href=\"https://docs.nestjs.com/techniques/validation#stripping-properties\">https://docs.nestjs.com/techniques/validation#stripping-properties</a>\n<a href=\"http://static.kancloud.cn/juukee/nestjs/2675355\">http://static.kancloud.cn/juukee/nestjs/2675355</a>\n<a href=\"https://juejin.cn/post/7064595876680826910\">https://juejin.cn/post/7064595876680826910</a></p>\n</blockquote>\n<h3 id=\"transform\">transform</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\">app.useGlobalPipes(\n    new ValidationPipe({\n      transform: true,\n    }),\n);</code></pre><pre class=\"language-ts\"><code class=\"language-ts\">@Get(':id')\nfindOne(@Param('id') id: number) {\n console.log(typeof id === 'number'); // true\n return 'This action returns a user';\n}</code></pre><p> id 会自动从 string 转换成 number</p>\n<h3 id=\"whitelist\">whitelist</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\">app.useGlobalPipes(\n    new ValidationPipe({\n      whitelist: true,\n    }),\n);</code></pre><p>true 时，自动删除非白名单属性(在验证类中没有任何修饰符的属性)。</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">// Bad\n// 所有参数都将被过滤\nexport class CreateCatDto {\n  public name: string;\n\n  public age: number;\n  \n  public breed: string;\n}\n\n\n// Good\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class CreateCatDto {\n  @IsString()\n  public name: string;\n\n  @IsNumber()\n  public age: number;\n\n  @IsString()\n  public breed: string;\n}</code></pre><h3 id=\"typeorm\">typeorm</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">    \"typeorm\": \"^0.3.6\",\n    \"typeorm\": \"0.2.45\",</code></pre><p>0.3.x 按照文档无法工作\n0.2.x 按照文档正常工作</p>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}