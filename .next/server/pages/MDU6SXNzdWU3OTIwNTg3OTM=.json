{"pageProps":{"post":{"id":"MDU6SXNzdWU3OTIwNTg3OTM=","url":"https://github.com/xiaotiandada/blog/issues/66","title":"tribute 实现@(艾特)功能","updatedAt":"2021-01-22T16:27:58Z","createdAt":"2021-01-22T14:42:09Z","body":"利用 https://github.com/zurb/tribute 实现一个前端@的功能 大概长这样。\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/24250627/105509577-983a2100-5d08-11eb-87e5-7990cf20dc96.png)\r\n\r\n\r\n因为前端是Vue(Nuxt)所以用了一个别人封装好的库 https://github.com/syropian/vue-tribute \r\n\r\n## 在Nuxt里面用？\r\n> 如果你不需要在Nuxt里面用就可以跳过\r\n\r\n```javascript\r\n// import Tribute from 'tributejs'\r\nlet Tribute\r\n\r\nif (process.client) {\r\n  Tribute = require('tributejs')\r\n}\r\n\r\nconst VueTribute = {\r\n  name: 'vue-tribute',\r\n  props: {\r\n    options: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  watch: {\r\n    options: {\r\n      immediate: false,\r\n      deep: true,\r\n      handler() {\r\n        if (this.tribute) {\r\n          setTimeout(() => {\r\n            var $el = this.$slots.default[0].elm\r\n            this.tribute.detach($el)\r\n\r\n            setTimeout(() => {\r\n              $el = this.$slots.default[0].elm\r\n              this.tribute = new Tribute(this.options)\r\n              this.tribute.attach($el)\r\n              $el.tributeInstance = this.tribute\r\n            }, 0)\r\n          }, 0)\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    if (process.client) {\r\n      if (typeof Tribute === 'undefined') {\r\n        throw new Error('[vue-tribute] cannot locate tributejs!')\r\n      }\r\n  \r\n      const $el = this.$slots.default[0].elm\r\n  \r\n      this.tribute = new Tribute(this.options)\r\n  \r\n      this.tribute.attach($el)\r\n  \r\n      $el.tributeInstance = this.tribute\r\n  \r\n      $el.addEventListener('tribute-replaced', e => {\r\n        e.target.dispatchEvent(new Event('input', { bubbles: true }))\r\n      })\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    const $el = this.$slots.default[0].elm\r\n\r\n    if (this.tribute) {\r\n      this.tribute.detach($el)\r\n    }\r\n  },\r\n  render(h) {\r\n    return h(\r\n      'div',\r\n      {\r\n        staticClass: 'v-tribute'\r\n      },\r\n      this.$slots.default\r\n    )\r\n  }\r\n}\r\nif (process.client) {\r\n  if (typeof window !== 'undefined' && window.Vue) {\r\n    window.Vue.component(VueTribute.name, VueTribute)\r\n  }\r\n}\r\n\r\nexport default VueTribute\r\n```\r\n\r\n因为Nuxt的关系 我基于源码又做了一层封装(加了一些判断而已)。\r\n\r\n## 使用\r\n\r\n```vue\r\n<client-only>\r\n      <vue-tribute\r\n        :options=\"tributeOptions\"\r\n        @tribute-no-match=\"noMatchFound\"\r\n        @tribute-replaced=\"tributeReplaced\"\r\n      >\r\n        <div\r\n          id=\"tributeShare\"\r\n          class=\"content-editable\"\r\n          contenteditable=\"true\"\r\n          placeholder=\"谈谈感想\"\r\n        />\r\n      </vue-tribute>\r\n</client-only>\r\n```\r\n##  搜索用户\r\n最主要的是这个**options**配置，然后 tribute 有几种输入框，具体看Demo就知道了 这里说一下怎么搜索\r\n\r\n```javascript\r\n      tributeOptions: {\r\n        collection: [\r\n          {\r\n            trigger: '@',\r\n            values: (query, cb) => {\r\n              console.log('query', query)\r\n              if (!query) {\r\n                return cb([])\r\n              }\r\n\r\n              return this.searchUser(query, cb)\r\n            },\r\n            loadingItemTemplate: '<div style=\"padding: 16px\">Loading</div>',\r\n            lookup: 'key',\r\n            fillAttr: 'key',\r\n            selectTemplate: function (item) {\r\n              console.log('item', item)\r\n              return `<a\r\n                  class=\"tribute-mention\"\r\n                  contenteditable=\"false\"\r\n                  href=\"javascript:;\"\r\n                  title=\"${item.original.value}\"\r\n                  data-user=\"${item.original.id}\">@${item.original.value}</a>`\r\n            },\r\n          },\r\n        ],\r\n      },\r\n\r\n// ...\r\n\r\n    searchUser: debounce(async function (val, cb) {\r\n      const list = await search(params)\r\n        return cb(list)\r\n      } else {\r\n        return cb([])\r\n      }\r\n    }, 300),\r\n```\r\n\r\n搜索通过 values 定义的Func来执行 **query** 是输入的内容 利用cb设置数据\r\n\r\n## 设置用户显示模版\r\n\r\n可以自定义Temp，我这里返回了一个 a Tag，默认是 span  我为了方便改成了 a。\r\n并且设置了 data-user 自定义数据 方便后续做渲染操作。\r\n\r\n```javascript\r\nreturn `<a\r\nclass=\"tribute-mention\"\r\ncontenteditable=\"false\"\r\nhref=\"javascript:;\"\r\ntitle=\"${item.original.value}\"\r\ndata-user=\"${item.original.id}\">@${item.original.value}</a>`\r\n```\r\n\r\n## Xss过滤\r\n为了避免用户插入HTML等提交，这里用 https://github.com/leizongmin/js-xss 过滤，显示的时候也需要过滤一次 避免用户通过接口提交（也可以用其他的办法）\r\n\r\n这里只通过a标签 因为a标签需要做用户跳转的\r\n\r\n```javascript\r\n// 过滤分享内容\r\nconst whiteListShare = {\r\n  a: [ 'class', 'contenteditable', 'href', 'title', 'data-user', 'target' ]\r\n}\r\nexport const Fn = (html, whiteList = whiteListShare) => {\r\n  return xss(html, {\r\n    whiteList: whiteList,\r\n    stripIgnoreTag: true,\r\n    stripIgnoreTagBody: ['script']\r\n  })\r\n}\r\n```\r\n\r\n## 渲染\r\n\r\n因为搜索用户的时候已经做了a标签处理只需要设置属性就可以\r\n```javascript\r\n    ele.setAttribute('href', 'xxx')\r\n```\r\n\r\n## Emoji\r\n\r\nhttps://github.com/jm-david/emoji-mart-vue 可以考虑用这个 选择很多\r\n\r\n","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<p>利用 <a href=\"https://github.com/zurb/tribute\">https://github.com/zurb/tribute</a> 实现一个前端@的功能 大概长这样。</p>\n<p><img src=\"https://user-images.githubusercontent.com/24250627/105509577-983a2100-5d08-11eb-87e5-7990cf20dc96.png\" alt=\"image\"></p>\n<p>因为前端是Vue(Nuxt)所以用了一个别人封装好的库 <a href=\"https://github.com/syropian/vue-tribute\">https://github.com/syropian/vue-tribute</a> </p>\n<h2 id=\"在nuxt里面用？\">在Nuxt里面用？</h2>\n<blockquote>\n<p>如果你不需要在Nuxt里面用就可以跳过</p>\n</blockquote>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// import Tribute from 'tributejs'</span>\n<span class=\"token keyword\">let</span> Tribute\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Tribute <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tributejs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> VueTribute <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'vue-tribute'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> Object<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">required</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">immediate</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> $el <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$slots<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>elm\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute<span class=\"token punctuation\">.</span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span>$el<span class=\"token punctuation\">)</span>\n\n            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              $el <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$slots<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>elm\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tribute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">)</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>$el<span class=\"token punctuation\">)</span>\n              $el<span class=\"token punctuation\">.</span>tributeInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Tribute <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[vue-tribute] cannot locate tributejs!'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n  \n      <span class=\"token keyword\">const</span> $el <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$slots<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>elm\n  \n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tribute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">)</span>\n  \n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>$el<span class=\"token punctuation\">)</span>\n  \n      $el<span class=\"token punctuation\">.</span>tributeInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute\n  \n      $el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tribute-replaced'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Event</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> $el <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$slots<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>elm\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tribute<span class=\"token punctuation\">.</span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span>$el<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">h</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">staticClass</span><span class=\"token operator\">:</span> <span class=\"token string\">'v-tribute'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$slots<span class=\"token punctuation\">.</span>default\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">&amp;&amp;</span> window<span class=\"token punctuation\">.</span>Vue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span>Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span>VueTribute<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> VueTribute<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> VueTribute</code></pre><p>因为Nuxt的关系 我基于源码又做了一层封装(加了一些判断而已)。</p>\n<h2 id=\"使用\">使用</h2>\n<pre class=\"language-vue\"><code class=\"language-vue\"><client-only>\n      <vue-tribute\n        :options=\"tributeOptions\"\n        @tribute-no-match=\"noMatchFound\"\n        @tribute-replaced=\"tributeReplaced\"\n      >\n        <div\n          id=\"tributeShare\"\n          class=\"content-editable\"\n          contenteditable=\"true\"\n          placeholder=\"谈谈感想\"\n        />\n      </vue-tribute>\n</client-only></code></pre><h2 id=\"搜索用户\">搜索用户</h2>\n<p>最主要的是这个<strong>options</strong>配置，然后 tribute 有几种输入框，具体看Demo就知道了 这里说一下怎么搜索</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">      <span class=\"token literal-property property\">tributeOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">collection</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">trigger</span><span class=\"token operator\">:</span> <span class=\"token string\">'@'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">values</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">query<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'query'</span><span class=\"token punctuation\">,</span> query<span class=\"token punctuation\">)</span>\n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>query<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">}</span>\n\n              <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">searchUser</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">loadingItemTemplate</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;div style=\"padding: 16px\">Loading&lt;/div>'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">lookup</span><span class=\"token operator\">:</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">fillAttr</span><span class=\"token operator\">:</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">selectTemplate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'item'</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span>\n              <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;a\n                  class=\"tribute-mention\"\n                  contenteditable=\"false\"\n                  href=\"javascript:;\"\n                  title=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>original<span class=\"token punctuation\">.</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"\n                  data-user=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>original<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">@</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>original<span class=\"token punctuation\">.</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/a></span><span class=\"token template-punctuation string\">`</span></span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">// ...</span>\n\n    <span class=\"token literal-property property\">searchUser</span><span class=\"token operator\">:</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre><p>搜索通过 values 定义的Func来执行 <strong>query</strong> 是输入的内容 利用cb设置数据</p>\n<h2 id=\"设置用户显示模版\">设置用户显示模版</h2>\n<p>可以自定义Temp，我这里返回了一个 a Tag，默认是 span  我为了方便改成了 a。\n并且设置了 data-user 自定义数据 方便后续做渲染操作。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;a\nclass=\"tribute-mention\"\ncontenteditable=\"false\"\nhref=\"javascript:;\"\ntitle=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>original<span class=\"token punctuation\">.</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"\ndata-user=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>original<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">@</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>original<span class=\"token punctuation\">.</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/a></span><span class=\"token template-punctuation string\">`</span></span></code></pre><h2 id=\"xss过滤\">Xss过滤</h2>\n<p>为了避免用户插入HTML等提交，这里用 <a href=\"https://github.com/leizongmin/js-xss\">https://github.com/leizongmin/js-xss</a> 过滤，显示的时候也需要过滤一次 避免用户通过接口提交（也可以用其他的办法）</p>\n<p>这里只通过a标签 因为a标签需要做用户跳转的</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 过滤分享内容</span>\n<span class=\"token keyword\">const</span> whiteListShare <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'contenteditable'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'href'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'data-user'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'target'</span> <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Fn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">html<span class=\"token punctuation\">,</span> whiteList <span class=\"token operator\">=</span> whiteListShare</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">xss</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">whiteList</span><span class=\"token operator\">:</span> whiteList<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">stripIgnoreTag</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">stripIgnoreTagBody</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"渲染\">渲染</h2>\n<p>因为搜索用户的时候已经做了a标签处理只需要设置属性就可以</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">    ele<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span></code></pre><h2 id=\"emoji\">Emoji</h2>\n<p><a href=\"https://github.com/jm-david/emoji-mart-vue\">https://github.com/jm-david/emoji-mart-vue</a> 可以考虑用这个 选择很多</p>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}