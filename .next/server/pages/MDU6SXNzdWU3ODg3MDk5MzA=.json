{"pageProps":{"post":{"id":"MDU6SXNzdWU3ODg3MDk5MzA=","url":"https://github.com/xiaotiandada/blog/issues/21","title":"网易云APP启动界面【模仿】","updatedAt":"2021-01-19T05:05:27Z","createdAt":"2021-01-19T05:05:27Z","body":"2019-07-04 22:24:23\r\n\r\n第一次还原这样的效果吧(我真菜😢😢😢!!!), 完成度70-80%(叹气😕)\r\n\r\n[项目地址](https://github.com/xiaotiandada/interest-page)\r\n\r\n<!-- more -->\r\n\r\n\r\n**预览**\r\n\r\n<img width=\"300\" src=\"网易云APP启动界面【模仿】/app1.png\" />\r\n<img width=\"300\" src=\"网易云APP启动界面【模仿】/app2.png\" />\r\n\r\n\r\n### 素材\r\n\r\n- [https://www.lottiefiles.com/](https://www.lottiefiles.com/) 我从这里找的,有源文件和JSON\r\n\r\n### 工具\r\n\r\n- 工具\r\n  - AE\r\n  - PS\r\n  - PxCook\r\n\r\n- Code\r\n  - [lottie-web](https://github.com/airbnb/lottie-web)\r\n  - webpack (辅助)\r\n\r\n### 还原过程\r\n\r\n#### 简单的适配\r\n\r\n``` js\r\nlet htmlWidth = document.documentElement.clientWidth || document.body.clientWidth\r\nlet htmlDom = document.querySelector('html')\r\nhtmlDom.style.fontSize = htmlWidth / 10 + 'px'\r\n```\r\n\r\n其实适配的方法有很多种,个人比较懒就简单的搜哈先 下面给大家贴出了一些文章\r\n\r\n- [https://www.imweb.io/topic/5a523cc0a192c3b460fce3a5](https://www.imweb.io/topic/5a523cc0a192c3b460fce3a5)\r\n- [http://www.alloyteam.com/2016/03/mobile-web-adaptation-tool-rem/](http://www.alloyteam.com/2016/03/mobile-web-adaptation-tool-rem/)\r\n- [https://segmentfault.com/a/1190000007526917](https://segmentfault.com/a/1190000007526917)\r\n\r\n- [Google](https://www.google.com/)\r\n\r\n手淘的方案也非常好,挺好用的 [https://github.com/amfe/lib-flexible](https://github.com/amfe/lib-flexible)\r\n\r\n**Vant的方案**\r\n\r\n``` js\r\n// Rem 适配\r\n// Vant 中的样式默认使用px作为单位，如果需要使用rem单位，推荐使用以下两个工具\r\n\r\n// postcss-pxtorem 是一款 postcss 插件，用于将单位转化为 rem\r\n// lib-flexible 用于设置 rem 基准值\r\n// 下面提供了一份基本的 postcss 配置，可以在此配置的基础上根据项目需求进行修改\r\n\r\nmodule.exports = {\r\n  plugins: {\r\n    'autoprefixer': {\r\n      browsers: ['Android >= 4.0', 'iOS >= 7']\r\n    },\r\n    'postcss-pxtorem': {\r\n      rootValue: 37.5,\r\n      propList: ['*']\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n> [https://youzan.github.io/vant/#/zh-CN/quickstart](https://youzan.github.io/vant/#/zh-CN/quickstart)\r\n\r\n### 素材导出\r\n\r\n**bodymovin**\r\n\r\n- 使用Ae的插件bodymovin导出Json文件, 我们装上之后把一些用不到的元素按钮隐藏先. 教程靠大家自己[Google](https://www.google.com/)了\r\n\r\n- 然后需要psd的可以在AE中导出(方法一样Google 233😏😏😏)\r\n\r\n- icon可以在PSD导出, 然后尺寸什么的在PxCook Ps了吗标注,量尺寸什么的,甚至在在线的标注工具标记(方法很多🤨🤨🤨)\r\n\r\n### 使用Lottie\r\n\r\n```js\r\nnpm install lottie-web\r\n\r\nlottie.loadAnimation({\r\n  container: element, // the dom element that will contain the animation\r\n  renderer: 'svg',\r\n  loop: true,\r\n  autoplay: true,\r\n  path: 'data.json' // the path to the animation json\r\n});\r\n```\r\n\r\n基本的使用还是很简单的👨🏻‍💻\r\n\r\n\r\n我们可以看见下面有时间轴, 可以看到动画时长什么的,然后我根据这个还原出来的效果不尽人意,(自己太菜 慢慢学习怎么还原这样的稿吧🙁🙁🙁)\r\n\r\n![](网易云APP启动界面【模仿】/1.png)\r\n\r\n> 查看动画时间\r\n\r\n```css\r\n  animation: logo-button-bottom 1.5s;\r\n  animation-fill-mode: forwards;\r\n```\r\n\r\n![](网易云APP启动界面【模仿】/2.png)\r\n\r\n> 查看效果执行\r\n\r\n```css\r\n@keyframes logo-button-bottom {\r\n  0% {\r\n    transform: translate(-50%, 80/75rem);\r\n    opacity: 0;\r\n  }\r\n  20% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translate(-50%, 0);\r\n  }\r\n}\r\n```\r\n\r\n![](网易云APP启动界面【模仿】/3.png)\r\n\r\n> 查看效果的动画曲线\r\n\r\n```css\r\nanimation: logo-button-bottom 1.5s ease-out;\r\n```\r\n\r\n大概就是这么多了吧... ... 看了看 垃圾文章无疑了 2333\r\n\r\n开了个Qq群，大家也可以进来互相交流~ iD 718639024","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<p>2019-07-04 22:24:23</p>\n<p>第一次还原这样的效果吧(我真菜😢😢😢!!!), 完成度70-80%(叹气😕)</p>\n<p><a href=\"https://github.com/xiaotiandada/interest-page\">项目地址</a></p>\n<!-- more -->\n\n\n<p><strong>预览</strong></p>\n<img width=\"300\" src=\"网易云APP启动界面【模仿】/app1.png\" />\n<img width=\"300\" src=\"网易云APP启动界面【模仿】/app2.png\" />\n\n\n<h3 id=\"素材\">素材</h3>\n<ul>\n<li><a href=\"https://www.lottiefiles.com/\">https://www.lottiefiles.com/</a> 我从这里找的,有源文件和JSON</li>\n</ul>\n<h3 id=\"工具\">工具</h3>\n<ul>\n<li><p>工具</p>\n<ul>\n<li>AE</li>\n<li>PS</li>\n<li>PxCook</li>\n</ul>\n</li>\n<li><p>Code</p>\n<ul>\n<li><a href=\"https://github.com/airbnb/lottie-web\">lottie-web</a></li>\n<li>webpack (辅助)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"还原过程\">还原过程</h3>\n<h4 id=\"简单的适配\">简单的适配</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> htmlWidth <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientWidth <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientWidth\n<span class=\"token keyword\">let</span> htmlDom <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span>\nhtmlDom<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>fontSize <span class=\"token operator\">=</span> htmlWidth <span class=\"token operator\">/</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span></code></pre><p>其实适配的方法有很多种,个人比较懒就简单的搜哈先 下面给大家贴出了一些文章</p>\n<ul>\n<li><p><a href=\"https://www.imweb.io/topic/5a523cc0a192c3b460fce3a5\">https://www.imweb.io/topic/5a523cc0a192c3b460fce3a5</a></p>\n</li>\n<li><p><a href=\"http://www.alloyteam.com/2016/03/mobile-web-adaptation-tool-rem/\">http://www.alloyteam.com/2016/03/mobile-web-adaptation-tool-rem/</a></p>\n</li>\n<li><p><a href=\"https://segmentfault.com/a/1190000007526917\">https://segmentfault.com/a/1190000007526917</a></p>\n</li>\n<li><p><a href=\"https://www.google.com/\">Google</a></p>\n</li>\n</ul>\n<p>手淘的方案也非常好,挺好用的 <a href=\"https://github.com/amfe/lib-flexible\">https://github.com/amfe/lib-flexible</a></p>\n<p><strong>Vant的方案</strong></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Rem 适配</span>\n<span class=\"token comment\">// Vant 中的样式默认使用px作为单位，如果需要使用rem单位，推荐使用以下两个工具</span>\n\n<span class=\"token comment\">// postcss-pxtorem 是一款 postcss 插件，用于将单位转化为 rem</span>\n<span class=\"token comment\">// lib-flexible 用于设置 rem 基准值</span>\n<span class=\"token comment\">// 下面提供了一份基本的 postcss 配置，可以在此配置的基础上根据项目需求进行修改</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'autoprefixer'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">browsers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Android >= 4.0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'iOS >= 7'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'postcss-pxtorem'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">rootValue</span><span class=\"token operator\">:</span> <span class=\"token number\">37.5</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">propList</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><blockquote>\n<p><a href=\"https://youzan.github.io/vant/#/zh-CN/quickstart\">https://youzan.github.io/vant/#/zh-CN/quickstart</a></p>\n</blockquote>\n<h3 id=\"素材导出\">素材导出</h3>\n<p><strong>bodymovin</strong></p>\n<ul>\n<li><p>使用Ae的插件bodymovin导出Json文件, 我们装上之后把一些用不到的元素按钮隐藏先. 教程靠大家自己<a href=\"https://www.google.com/\">Google</a>了</p>\n</li>\n<li><p>然后需要psd的可以在AE中导出(方法一样Google 233😏😏😏)</p>\n</li>\n<li><p>icon可以在PSD导出, 然后尺寸什么的在PxCook Ps了吗标注,量尺寸什么的,甚至在在线的标注工具标记(方法很多🤨🤨🤨)</p>\n</li>\n</ul>\n<h3 id=\"使用lottie\">使用Lottie</h3>\n<pre class=\"language-js\"><code class=\"language-js\">npm install lottie<span class=\"token operator\">-</span>web\n\nlottie<span class=\"token punctuation\">.</span><span class=\"token function\">loadAnimation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> element<span class=\"token punctuation\">,</span> <span class=\"token comment\">// the dom element that will contain the animation</span>\n  <span class=\"token literal-property property\">renderer</span><span class=\"token operator\">:</span> <span class=\"token string\">'svg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">loop</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">autoplay</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'data.json'</span> <span class=\"token comment\">// the path to the animation json</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>基本的使用还是很简单的👨🏻‍💻</p>\n<p>我们可以看见下面有时间轴, 可以看到动画时长什么的,然后我根据这个还原出来的效果不尽人意,(自己太菜 慢慢学习怎么还原这样的稿吧🙁🙁🙁)</p>\n<p><img src=\"%E7%BD%91%E6%98%93%E4%BA%91APP%E5%90%AF%E5%8A%A8%E7%95%8C%E9%9D%A2%E3%80%90%E6%A8%A1%E4%BB%BF%E3%80%91/1.png\" alt=\"\"></p>\n<blockquote>\n<p>查看动画时间</p>\n</blockquote>\n<pre class=\"language-css\"><code class=\"language-css\">  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> logo-button-bottom 1.5s<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">animation-fill-mode</span><span class=\"token punctuation\">:</span> forwards<span class=\"token punctuation\">;</span></code></pre><p><img src=\"%E7%BD%91%E6%98%93%E4%BA%91APP%E5%90%AF%E5%8A%A8%E7%95%8C%E9%9D%A2%E3%80%90%E6%A8%A1%E4%BB%BF%E3%80%91/2.png\" alt=\"\"></p>\n<blockquote>\n<p>查看效果执行</p>\n</blockquote>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> logo-button-bottom</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span> 80/75rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">20%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p><img src=\"%E7%BD%91%E6%98%93%E4%BA%91APP%E5%90%AF%E5%8A%A8%E7%95%8C%E9%9D%A2%E3%80%90%E6%A8%A1%E4%BB%BF%E3%80%91/3.png\" alt=\"\"></p>\n<blockquote>\n<p>查看效果的动画曲线</p>\n</blockquote>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> logo-button-bottom 1.5s ease-out<span class=\"token punctuation\">;</span></code></pre><p>大概就是这么多了吧... ... 看了看 垃圾文章无疑了 2333</p>\n<p>开了个Qq群，大家也可以进来互相交流~ iD 718639024</p>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}