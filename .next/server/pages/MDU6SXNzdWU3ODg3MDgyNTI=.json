{"pageProps":{"post":{"id":"MDU6SXNzdWU3ODg3MDgyNTI=","url":"https://github.com/xiaotiandada/blog/issues/15","title":"Electron","updatedAt":"2022-01-17T17:25:14Z","createdAt":"2021-01-19T05:01:27Z","body":"- [look-wallpapers](https://github.com/xiaotiandada/look-wallpapers)\r\n- [E-video](https://github.com/xiaotiandada/E-video)\r\n\r\n\r\n\r\n### 本地存储\r\n\r\n```javascript\r\nimport storage from 'electron-json-storage';\r\n\r\n/**\r\n * storage Get\r\n * @returns {Promise<unknown>}\r\n */\r\nexport const storageGet = key => new Promise((resolve, reject) => {\r\n  storage.get(key, (error, data) => {\r\n    if (error) {\r\n      reject(error);\r\n    }\r\n\r\n    console.log(data);\r\n    resolve(data);\r\n  });\r\n});\r\n\r\n/**\r\n * storage Set\r\n * @param data\r\n * @returns {Promise<unknown>}\r\n */\r\nexport const storageSet = (key, data) => new Promise((resolve, reject) => {\r\n  storage.set(key, data, (error) => {\r\n    if (error) {\r\n      reject(error);\r\n    }\r\n    resolve('success');\r\n  });\r\n});\r\n```\r\n\r\n### 下载图片\r\n\r\n```javascript\r\n/**\r\n * download image\r\n */\r\nexport const downloadImage = async ({\r\n  name,\r\n  url,\r\n}) => {\r\n  // path\r\n  const imagePath = await 'path';\r\n  const outputLocationPath = path.join(\r\n    imagePath,\r\n    name,\r\n  );\r\n\r\n  console.log('outputLocationPath', outputLocationPath);\r\n\r\n  // download\r\n  const response = await axios.get(url, {\r\n    responseType: 'arraybuffer',\r\n  });\r\n\r\n  const base64Image = new Buffer.from(\r\n    response.data,\r\n    'binary',\r\n  ).toString('base64');\r\n  await util.promisify(fs.writeFile)(outputLocationPath, base64Image, 'base64');\r\n\r\n  return outputLocationPath;\r\n};\r\n```\r\n\r\n### 设置壁纸\r\n\r\n```javascript\r\nimport wallpaper from 'wallpaper';\r\n\r\n/**\r\n * set wallpaper\r\n */\r\nexport const setWallpaper = async ({\r\n  name,\r\n  url,\r\n}) => {\r\n  const imagePath = await downloadImage({ name, url });\r\n  await wallpaper.set(imagePath, { scale: 'auto' });\r\n  console.log('set wallpaper success');\r\n  new remote.Notification({\r\n    title: 'Notification',\r\n    body: 'Set Wallpaper Success',\r\n  }).show();\r\n};\r\n```\r\n\r\n\r\n\r\n### 自定义状态栏\r\n\r\n因为win自带的状态栏太丑了，所以自己模拟了一个，electron-vue 通过 ipcMain 发送消息\r\n\r\n[ipcMain](https://electronjs.org/docs/api/ipc-main#ipcmain) - 从主进程到渲染进程的异步通信。\r\n\r\n> ipcMain模块是EventEmitter类的一个实例。 当在主进程中使用时，它处理从渲染器进程（网页）发送出来的异步和同步信息。 从渲染器进程发送的消息将被发送到该模块。 \r\n\r\n[参考文章](https://blog.csdn.net/liyangyang08/article/details/78608822?locationNum=7&fps=1)\r\n\r\n1. 在 index.js 修改窗口大小.\r\n\r\n[BrowserWindow](https://electronjs.org/docs/api/browser-window#winsetcontentsizewidth-height-animate) - 创建和控制浏览器窗口。\r\n\r\n> 里面的参数自己可以看文档哦~\r\n\r\n```js\r\n mainWindow = new BrowserWindow({\r\n    height: 710,\r\n    width: 1200,\r\n    useContentSize: true,\r\n    frame: false\r\n  })\r\n\r\n```\r\n\r\n设置之后，有一个细节需要了解一下.\r\n\r\n[可拖拽区](https://electronjs.org/docs/api/frameless-window) - 默认情况下, 无框窗口是 non-draggable 的..... (总之就是，你需要设置一下)\r\n\r\n要使整个窗口可拖拽, 您可以添加 -webkit-app-region: drag 作为 body 的样式:\r\n\r\n```css\r\n<body style=\"-webkit-app-region: drag\"></body>\r\n```\r\n\r\n请注意, 如果您已使整个窗口draggable, 则必须将按钮标记为 non-draggable, 否则用户将无法单击它们:\r\n\r\n```css\r\nbutton {\r\n  -webkit-app-region: no-drag;\r\n}\r\n```\r\n\r\n如果你设置自定义标题栏为 draggable, 你也需要标题栏中所有的按钮都设为 non-draggable。\r\n\r\n2. 模拟事件\r\n\r\n参考文章里面有介绍到，流程大概就是这样。\r\n\r\n```js\r\n// 引入\r\nconst {ipcRenderer: ipc} = require('electron')\r\n\r\n// 自定义事件\r\nwinMin () {\r\n    ipc.send('window-min')\r\n},\r\nwinEnlargeOrNarrow () {\r\n    ipc.send('win-enlarge-or-narrow')\r\n},\r\nwinClose () {\r\n    ipc.send('window-close')\r\n}\r\n\r\n/**\r\n * 模拟 最小 放大 还原 关闭 事件\r\n * index.js 修改\r\n */\r\nipcMain.on('window-min', () => {\r\n  mainWindow.minimize()\r\n})\r\nipcMain.on('win-enlarge-or-narrow', () => {\r\n  if (mainWindow.isMaximized()) {\r\n    mainWindow.unmaximize()\r\n  } else {\r\n    mainWindow.maximize()\r\n  }\r\n})\r\nipcMain.on('window-close', () => {\r\n  mainWindow.close()\r\n})\r\n```\r\n\r\n### 弹幕\r\n\r\n播放器提供了相应的接口，只需要获取评论转换相应的数据就可以了。\r\n\r\n```js\r\ntransformComments (commentsArr) {}\r\n\r\ndp.danmaku.draw({\r\n   text: 'DIYgod is amazing',\r\n   color: '#fff',\r\n   type: 'top'\r\n});\r\n```\r\n\r\nhttps://github.com/xiaotiandada/E-video/blob/master/src/renderer/view/index.vue\r\n\r\n```js\r\nimport axios from 'axios'\r\n\r\nexport default () => {\r\n  return axios.create({\r\n    baseURL: 'xxx',\r\n    timeout: 1000\r\n  })\r\n}\r\n\r\n-----------------\r\n\r\nimport Api from './Api'\r\n\r\nexport default {\r\n  /**\r\n   * 默认30条数据，可以自定义\r\n   * @param limit\r\n   * @returns {*}\r\n   */\r\n  getTopMv (limit = 30, offset = 0) {\r\n    return Api().get(`/top/mv?limit=${limit}&offset=${offset}`)\r\n  },\r\n  getMvId (id) {\r\n    return Api().get(`/mv?mvid=${id}`)\r\n  },\r\n  getMvComments (id) {\r\n    return Api().get(`/comment/mv?id=${id}`)\r\n  }\r\n}\r\n\r\n```\r\n","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<ul>\n<li><a href=\"https://github.com/xiaotiandada/look-wallpapers\">look-wallpapers</a></li>\n<li><a href=\"https://github.com/xiaotiandada/E-video\">E-video</a></li>\n</ul>\n<h3 id=\"本地存储\">本地存储</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> storage <span class=\"token keyword\">from</span> <span class=\"token string\">'electron-json-storage'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * storage Get\n * @returns {Promise&lt;unknown>}\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">storageGet</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  storage<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * storage Set\n * @param data\n * @returns {Promise&lt;unknown>}\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">storageSet</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  storage<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"下载图片\">下载图片</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * download image\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">downloadImage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">,</span>\n  url<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// path</span>\n  <span class=\"token keyword\">const</span> imagePath <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> outputLocationPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>\n    imagePath<span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'outputLocationPath'</span><span class=\"token punctuation\">,</span> outputLocationPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// download</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">responseType</span><span class=\"token operator\">:</span> <span class=\"token string\">'arraybuffer'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> base64Image <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer<span class=\"token punctuation\">.</span>from</span><span class=\"token punctuation\">(</span>\n    response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'binary'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>writeFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>outputLocationPath<span class=\"token punctuation\">,</span> base64Image<span class=\"token punctuation\">,</span> <span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> outputLocationPath<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"设置壁纸\">设置壁纸</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> wallpaper <span class=\"token keyword\">from</span> <span class=\"token string\">'wallpaper'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * set wallpaper\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setWallpaper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">,</span>\n  url<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> imagePath <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">downloadImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> url <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> wallpaper<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token string\">'auto'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'set wallpaper success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">remote<span class=\"token punctuation\">.</span>Notification</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Notification'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">'Set Wallpaper Success'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"自定义状态栏\">自定义状态栏</h3>\n<p>因为win自带的状态栏太丑了，所以自己模拟了一个，electron-vue 通过 ipcMain 发送消息</p>\n<p><a href=\"https://electronjs.org/docs/api/ipc-main#ipcmain\">ipcMain</a> - 从主进程到渲染进程的异步通信。</p>\n<blockquote>\n<p>ipcMain模块是EventEmitter类的一个实例。 当在主进程中使用时，它处理从渲染器进程（网页）发送出来的异步和同步信息。 从渲染器进程发送的消息将被发送到该模块。 </p>\n</blockquote>\n<p><a href=\"https://blog.csdn.net/liyangyang08/article/details/78608822?locationNum=7&amp;fps=1\">参考文章</a></p>\n<ol>\n<li>在 index.js 修改窗口大小.</li>\n</ol>\n<p><a href=\"https://electronjs.org/docs/api/browser-window#winsetcontentsizewidth-height-animate\">BrowserWindow</a> - 创建和控制浏览器窗口。</p>\n<blockquote>\n<p>里面的参数自己可以看文档哦~</p>\n</blockquote>\n<pre class=\"language-js\"><code class=\"language-js\"> mainWindow <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BrowserWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">710</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">1200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">useContentSize</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">frame</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre><p>设置之后，有一个细节需要了解一下.</p>\n<p><a href=\"https://electronjs.org/docs/api/frameless-window\">可拖拽区</a> - 默认情况下, 无框窗口是 non-draggable 的..... (总之就是，你需要设置一下)</p>\n<p>要使整个窗口可拖拽, 您可以添加 -webkit-app-region: drag 作为 body 的样式:</p>\n<pre class=\"language-css\"><code class=\"language-css\">&lt;body style=<span class=\"token string\">\"-webkit-app-region: drag\"</span>>&lt;/body></code></pre><p>请注意, 如果您已使整个窗口draggable, 则必须将按钮标记为 non-draggable, 否则用户将无法单击它们:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">-webkit-app-region</span><span class=\"token punctuation\">:</span> no-drag<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><p>如果你设置自定义标题栏为 draggable, 你也需要标题栏中所有的按钮都设为 non-draggable。</p>\n<ol start=\"2\">\n<li>模拟事件</li>\n</ol>\n<p>参考文章里面有介绍到，流程大概就是这样。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 引入</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">ipcRenderer</span><span class=\"token operator\">:</span> ipc<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'electron'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 自定义事件</span>\n<span class=\"token function\">winMin</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ipc<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window-min'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">winEnlargeOrNarrow</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ipc<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'win-enlarge-or-narrow'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">winClose</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ipc<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window-close'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 模拟 最小 放大 还原 关闭 事件\n * index.js 修改\n */</span>\nipcMain<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window-min'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  mainWindow<span class=\"token punctuation\">.</span><span class=\"token function\">minimize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nipcMain<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'win-enlarge-or-narrow'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mainWindow<span class=\"token punctuation\">.</span><span class=\"token function\">isMaximized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mainWindow<span class=\"token punctuation\">.</span><span class=\"token function\">unmaximize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    mainWindow<span class=\"token punctuation\">.</span><span class=\"token function\">maximize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nipcMain<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window-close'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  mainWindow<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><h3 id=\"弹幕\">弹幕</h3>\n<p>播放器提供了相应的接口，只需要获取评论转换相应的数据就可以了。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">transformComments</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">commentsArr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\ndp<span class=\"token punctuation\">.</span>danmaku<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n   <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'DIYgod is amazing'</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'top'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p><a href=\"https://github.com/xiaotiandada/E-video/blob/master/src/renderer/view/index.vue\">https://github.com/xiaotiandada/E-video/blob/master/src/renderer/view/index.vue</a></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">baseURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token keyword\">import</span> Api <span class=\"token keyword\">from</span> <span class=\"token string\">'./Api'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * 默认30条数据，可以自定义\n   * @param limit\n   * @returns {*}\n   */</span>\n  <span class=\"token function\">getTopMv</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">limit <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Api</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/top/mv?limit=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>limit<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;offset=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>offset<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">getMvId</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Api</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/mv?mvid=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">getMvComments</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Api</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/comment/mv?id=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}