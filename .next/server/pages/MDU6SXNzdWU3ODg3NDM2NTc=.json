{"pageProps":{"post":{"id":"MDU6SXNzdWU3ODg3NDM2NTc=","url":"https://github.com/xiaotiandada/blog/issues/29","title":"node爬虫 简易版【站酷】","updatedAt":"2021-01-19T06:23:52Z","createdAt":"2021-01-19T06:23:52Z","body":"2019-08-29 13:35:12\r\n\r\n## node爬虫 简易版【站酷】\r\n\r\n简单的学习一下node爬虫, 抓取站酷(本来想抓花瓣的,但是因为花瓣是接口调用的 而我想抓dom所以选择了站酷 :)\r\n\r\n<!-- more -->\r\n\r\n## Result\r\n\r\n<img width=\"400\" src=\"node爬虫-简易版【站酷】/1.png\">\r\n<img width=\"400\" src=\"node爬虫-简易版【站酷】/2.png\">\r\n\r\n\r\n## 资料\r\n\r\nhttps://github.com/liuxing/mm-spider\r\n\r\n站酷: https://www.zcool.com.cn\r\n\r\n## 库\r\n\r\n```js\r\nconst superagent = require('superagent');\r\nconst cheerio = require('cheerio')\r\nconst fs = require('fs-extra')\r\n```\r\n\r\nhttps://www.npmjs.com/ 搜索\r\n\r\n## Go\r\n\r\n### 获取HTML\r\n\r\n```js\r\nconst getUrlHtml = async () => {\r\n  try {\r\n    // 外层定义的id\r\n    const res = await superagent.get(`https://www.zcool.com.cn/?p=${id}`);\r\n    return res.text\r\n  } catch (err) {\r\n    console.error(err);\r\n    return false\r\n  }\r\n}\r\n```\r\n\r\n使用 superagent 获取html\r\n\r\n文档: https://www.npmjs.com/package/superagent\r\n\r\n### 拆Dom\r\n\r\n```js\r\nconst getDom = (html) => {\r\n  if (!html) return // 没html返回\r\n  const $ = cheerio.load(html)\r\n  let arr = [] // 储存需要下载的数据\r\n  // 获取dom 循环写入数据\r\n  $('.all-work-list .work-list-box .card-box').each((i, el) => {\r\n    let img = $(el).find('.card-img a img').attr('src')\r\n    let title = $(el).find('.card-info .card-info-title a').text()\r\n    arr.push({\r\n      title: title.replace(/\\//g, ''), // 去掉 / 因为 / 会认为是路径, 根据实际情况来操作\r\n      url: img.replace('@260w_195h_1c_1e_1o_100sh.jpg', '') // 去掉后缀 不使用缩略图 根据实际情况来操作\r\n    })\r\n  })\r\n  return arr\r\n}\r\n```\r\n\r\n使用 cheerio 操作html\r\n\r\n文档: https://www.npmjs.com/package/cheerio\r\n\r\n\r\n### 下载图片\r\n\r\n``` js\r\n// 睡眠\r\nconst sleep = async time => new Promise(resolve => setTimeout(resolve, time))\r\n```\r\n\r\n```js\r\nconst downloadImg = async arr => {\r\n  // 先删除文件夹 可以不用这步 因为开始写的时候会重复创建 我又懒得删\r\n  try {\r\n    await fs.remove(path.join(__dirname, `/page${id}`))\r\n  } catch (error) {\r\n    console.log('删除文件夹失败')\r\n  }\r\n  // 创建文件夹 根据id命名\r\n  try {\r\n    await fs.mkdir(path.join(__dirname, `/page${id}` ))\r\n  } catch (error) {\r\n    return console.log('创建文件夹失败')\r\n  }\r\n  // 下载图片\r\n  const download = async item => {\r\n    await sleep(100) // 睡眠 降低爬虫的速度\r\n    try {\r\n      // 通过 superagent 保存图片\r\n      const req =  superagent.get(item.url)\r\n      // 使用了stream(流)\r\n      req.pipe(fs.createWriteStream(`./page${id}/${item.title}.png`))\r\n      console.log(`下载${item.title}done`)\r\n    } catch (error) {\r\n      return console.log(`下载图片失败${item.title}`, error)\r\n    }\r\n  }\r\n\r\n  // 循环arr数据下载图片\r\n  for (const item of arr) await download(item)\r\n}\r\n```\r\n\r\n使用fs下载图片\r\n\r\n文档:\r\n\r\nhttps://www.npmjs.com/package/fs-extra\r\n\r\nhttps://nodejs.org/api/fs.html\r\n\r\n> 遇到的问题:\r\n>\r\n> 下载图片不能使用async await 好像会提前结束 导致下载图片无法使用(具体可以大佬实验的时候打印Error)(可能是我打开方式不对 请大佬赐教)\r\n>\r\n> 文件名不能带有 / 会认为是路径\r\n\r\n\r\n### All Code\r\n\r\n<details>\r\n<summary>查看所有代码</summary>\r\n\r\n\r\n```js\r\nconst superagent = require('superagent');\r\nconst cheerio = require('cheerio')\r\nconst fs = require('fs-extra')\r\nconst path = require('path')\r\n\r\nlet id = 1\r\nlet maxPage = 10\r\n\r\nconst sleep = async time => new Promise(resolve => setTimeout(resolve, time))\r\n\r\nconst getUrlHtml = async () => {\r\n  try {\r\n    // 外层定义的id\r\n    const res = await superagent.get(`https://www.zcool.com.cn/?p=${id}`);\r\n    return res.text\r\n  } catch (err) {\r\n    console.error(err);\r\n    return false\r\n  }\r\n}\r\n\r\nconst getDom = (html) => {\r\n  if (!html) return // 没html返回\r\n  const $ = cheerio.load(html)\r\n  let arr = [] // 储存需要下载的数据\r\n  // 获取dom 循环写入数据\r\n  $('.all-work-list .work-list-box .card-box').each((i, el) => {\r\n    let img = $(el).find('.card-img a img').attr('src')\r\n    let title = $(el).find('.card-info .card-info-title a').text()\r\n    arr.push({\r\n      title: title.replace(/\\//g, ''), // 去掉 / 因为 / 会认为是路径, 根据实际情况来操作\r\n      url: img.replace('@260w_195h_1c_1e_1o_100sh.jpg', '') // 去掉后缀 不使用缩略图 根据实际情况来操作\r\n    })\r\n  })\r\n  return arr\r\n}\r\n\r\nconst downloadImg = async arr => {\r\n  // 先删除文件夹 可以不用这步 因为开始写的时候会重复创建 我又懒得删\r\n  try {\r\n    await fs.remove(path.join(__dirname, `/page${id}`))\r\n  } catch (error) {\r\n    console.log('删除文件夹失败')\r\n  }\r\n  // 创建文件夹 根据id命名\r\n  try {\r\n    await fs.mkdir(path.join(__dirname, `/page${id}` ))\r\n  } catch (error) {\r\n    return console.log('创建文件夹失败')\r\n  }\r\n  // 下载图片\r\n  const download = async item => {\r\n    await sleep(100) // 睡眠 降低爬虫的速度\r\n    try {\r\n      // 通过 superagent 保存图片\r\n      const req =  superagent.get(item.url)\r\n      // 使用了stream(流)\r\n      req.pipe(fs.createWriteStream(`./page${id}/${item.title}.png`))\r\n      console.log(`下载${item.title}done`)\r\n    } catch (error) {\r\n      return console.log(`下载图片失败${item.title}`, error)\r\n    }\r\n  }\r\n\r\n  // 循环arr数据下载图片\r\n  for (const item of arr) await download(item)\r\n}\r\n\r\nconst init = async () => {\r\n  for (let i = 0; i < maxPage; i++) {\r\n    let urlHtml = await getUrlHtml()\r\n    let getDate = await getDom(urlHtml)\r\n    await downloadImg(getDate)\r\n    id = i + 1\r\n  }\r\n}\r\n\r\ninit()\r\n\r\n```\r\n\r\n</details>\r\n\r\n源码地址: https://github.com/xiaotiandada/interest-page/tree/master/crawler\r\n\r\n## 修改1\r\n\r\n--- 分割线 ---\r\n\r\n感谢大佬的指点 ----> QQ 923398776\r\n\r\n### 资料\r\n\r\nhttps://andyliwr.github.io/2017/12/05/nodejs_spider_ip/\r\n\r\n### 使用async控制并发数\r\n\r\n```js\r\n  try {\r\n    // async map limit 控制并发数\r\n    async.mapLimit(arr, 20, async item => download(item, id), (err, results) => {\r\n      if (err) throw err\r\n      console.log(results)\r\n    })\r\n  } catch (error) {\r\n    console.log(`async.mapLimit${error}`)\r\n  }\r\n```\r\n\r\n文档: https://www.npmjs.com/package/async\r\n\r\n### 动态设置UA\r\n\r\n```js\r\n    // userAgent\r\n    const userAgents = [ 'Mozilla/5.0 ..'];\r\n\r\n    try {\r\n      let userAgent = userAgents[parseInt(Math.random() * userAgents.length)]\r\n      // 通过 superagent 保存图片\r\n      const req =  superagent.get(item.url)\r\n      .set({ 'User-Agent': userAgent })\r\n      // 使用了stream(流)\r\n      req.pipe(fs.createWriteStream(`./page${id}/${item.title}.png`))\r\n      return `下载${item.title}done`\r\n    } catch (error) {\r\n      return console.log(`下载图片失败${item.title}`, error)\r\n    }\r\n  }\r\n```\r\n\r\n### All Code\r\n\r\n<details>\r\n<summary>查看所有代码</summary>\r\n\r\n\r\n```js\r\nconst superagent = require('superagent');\r\nconst cheerio = require('cheerio')\r\nconst fs = require('fs-extra')\r\nconst path = require('path')\r\nconst async = require(\"async\");\r\n\r\nlet id = 1\r\nlet maxPage = 10\r\n\r\n// userAgent\r\nconst userAgents = [\r\n  'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12',\r\n  'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)',\r\n  'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11',\r\n  'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20',\r\n  'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6',\r\n  'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER',\r\n  'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0) ,Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9',\r\n  'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',\r\n  'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)',\r\n  'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)',\r\n  'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b13pre) Gecko/20110307 Firefox/4.0b13pre',\r\n  'Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52',\r\n  'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12',\r\n  'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)',\r\n  'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6',\r\n  'Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6',\r\n  'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)',\r\n  'Opera/9.25 (Windows NT 5.1; U; en), Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9',\r\n  'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36'\r\n]\r\n\r\nconst getUrlHtml = async () => {\r\n  try {\r\n    // 外层定义的id\r\n    const res = await superagent.get(`https://www.zcool.com.cn/?p=${id}`);\r\n    return res.text\r\n  } catch (err) {\r\n    console.error(err);\r\n    return false\r\n  }\r\n}\r\n\r\nconst getDom = (html) => {\r\n  if (!html) return // 没html返回\r\n  const $ = cheerio.load(html)\r\n  let arr = [] // 储存需要下载的数据\r\n  // 获取dom 循环写入数据\r\n  $('.all-work-list .work-list-box .card-box').each((i, el) => {\r\n    let img = $(el).find('.card-img a img').attr('src')\r\n    let title = $(el).find('.card-info .card-info-title a').text()\r\n    arr.push({\r\n      title: title.replace(/\\//g, ''), // 去掉 / 因为 / 会认为是路径, 根据实际情况来操作\r\n      url: img.replace('@260w_195h_1c_1e_1o_100sh.jpg', '') // 去掉后缀 不使用缩略图 根据实际情况来操作\r\n    })\r\n  })\r\n  return arr\r\n}\r\n\r\nconst downloadImg = async (arr, id) => {\r\n  // 先删除文件夹 可以不用这步 因为开始写的时候会重复创建 我又懒得删\r\n  try {\r\n    await fs.remove(path.join(__dirname, `/page${id}`))\r\n  } catch (error) {\r\n    console.log('删除文件夹失败')\r\n  }\r\n  // 创建文件夹 根据id命名\r\n  try {\r\n    await fs.mkdir(path.join(__dirname, `/page${id}` ))\r\n  } catch (error) {\r\n    return console.log('创建文件夹失败')\r\n  }\r\n  // 下载图片\r\n  const download = (item, id) => {\r\n    try {\r\n      let userAgent = userAgents[parseInt(Math.random() * userAgents.length)]\r\n      // 通过 superagent 保存图片\r\n      const req =  superagent.get(item.url)\r\n      .set({ 'User-Agent': userAgent })\r\n      // 使用了stream(流)\r\n      req.pipe(fs.createWriteStream(`./page${id}/${item.title}.png`))\r\n      return `下载${item.title}done`\r\n    } catch (error) {\r\n      return console.log(`下载图片失败${item.title}`, error)\r\n    }\r\n  }\r\n\r\n  try {\r\n    // async map limit 控制并发数\r\n    async.mapLimit(arr, 20, async item => download(item, id), (err, results) => {\r\n      if (err) throw err\r\n      console.log(results)\r\n    })\r\n  } catch (error) {\r\n    console.log(`async.mapLimit${error}`)\r\n  }\r\n\r\n}\r\n\r\nconst init = async () => {\r\n  for (let i = 0; i <= maxPage; i++) {\r\n    let urlHtml = await getUrlHtml()\r\n    let getDate = await getDom(urlHtml)\r\n    await downloadImg(getDate, id)\r\n    id = i + 1\r\n  }\r\n}\r\n\r\ninit()\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n\r\n> 不足, 没有动态设置Ip等等, 希望大佬多多指点","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<p>2019-08-29 13:35:12</p>\n<h2 id=\"node爬虫-简易版【站酷】\">node爬虫 简易版【站酷】</h2>\n<p>简单的学习一下node爬虫, 抓取站酷(本来想抓花瓣的,但是因为花瓣是接口调用的 而我想抓dom所以选择了站酷 :)</p>\n<!-- more -->\n\n<h2 id=\"result\">Result</h2>\n<img width=\"400\" src=\"node爬虫-简易版【站酷】/1.png\">\n<img width=\"400\" src=\"node爬虫-简易版【站酷】/2.png\">\n\n\n<h2 id=\"资料\">资料</h2>\n<p><a href=\"https://github.com/liuxing/mm-spider\">https://github.com/liuxing/mm-spider</a></p>\n<p>站酷: <a href=\"https://www.zcool.com.cn\">https://www.zcool.com.cn</a></p>\n<h2 id=\"库\">库</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> superagent <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'superagent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cheerio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cheerio'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span></code></pre><p><a href=\"https://www.npmjs.com/\">https://www.npmjs.com/</a> 搜索</p>\n<h2 id=\"go\">Go</h2>\n<h3 id=\"获取html\">获取HTML</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUrlHtml</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 外层定义的id</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> superagent<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://www.zcool.com.cn/?p=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>text\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>使用 superagent 获取html</p>\n<p>文档: <a href=\"https://www.npmjs.com/package/superagent\">https://www.npmjs.com/package/superagent</a></p>\n<h3 id=\"拆dom\">拆Dom</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getDom</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">html</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>html<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token comment\">// 没html返回</span>\n  <span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 储存需要下载的数据</span>\n  <span class=\"token comment\">// 获取dom 循环写入数据</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.all-work-list .work-list-box .card-box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span> el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> img <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.card-img a img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> title <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.card-info .card-info-title a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> title<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 去掉 / 因为 / 会认为是路径, 根据实际情况来操作</span>\n      <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@260w_195h_1c_1e_1o_100sh.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 去掉后缀 不使用缩略图 根据实际情况来操作</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> arr\n<span class=\"token punctuation\">}</span></code></pre><p>使用 cheerio 操作html</p>\n<p>文档: <a href=\"https://www.npmjs.com/package/cheerio\">https://www.npmjs.com/package/cheerio</a></p>\n<h3 id=\"下载图片\">下载图片</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 睡眠</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sleep</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">time</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">downloadImg</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">arr</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 先删除文件夹 可以不用这步 因为开始写的时候会重复创建 我又懒得删</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'删除文件夹失败'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 创建文件夹 根据id命名</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'创建文件夹失败'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 下载图片</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">download</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 睡眠 降低爬虫的速度</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 通过 superagent 保存图片</span>\n      <span class=\"token keyword\">const</span> req <span class=\"token operator\">=</span>  superagent<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 使用了stream(流)</span>\n      req<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.png</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">下载</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">done</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">下载图片失败</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 循环arr数据下载图片</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> arr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">await</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre><p>使用fs下载图片</p>\n<p>文档:</p>\n<p><a href=\"https://www.npmjs.com/package/fs-extra\">https://www.npmjs.com/package/fs-extra</a></p>\n<p><a href=\"https://nodejs.org/api/fs.html\">https://nodejs.org/api/fs.html</a></p>\n<blockquote>\n<p>遇到的问题:</p>\n<p>下载图片不能使用async await 好像会提前结束 导致下载图片无法使用(具体可以大佬实验的时候打印Error)(可能是我打开方式不对 请大佬赐教)</p>\n<p>文件名不能带有 / 会认为是路径</p>\n</blockquote>\n<h3 id=\"all-code\">All Code</h3>\n<details>\n<summary>查看所有代码</summary>\n\n\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> superagent <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'superagent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cheerio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cheerio'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">let</span> maxPage <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sleep</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">time</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUrlHtml</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 外层定义的id</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> superagent<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://www.zcool.com.cn/?p=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>text\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getDom</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">html</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>html<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token comment\">// 没html返回</span>\n  <span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 储存需要下载的数据</span>\n  <span class=\"token comment\">// 获取dom 循环写入数据</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.all-work-list .work-list-box .card-box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span> el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> img <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.card-img a img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> title <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.card-info .card-info-title a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> title<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 去掉 / 因为 / 会认为是路径, 根据实际情况来操作</span>\n      <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@260w_195h_1c_1e_1o_100sh.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 去掉后缀 不使用缩略图 根据实际情况来操作</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> arr\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">downloadImg</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">arr</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 先删除文件夹 可以不用这步 因为开始写的时候会重复创建 我又懒得删</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'删除文件夹失败'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 创建文件夹 根据id命名</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'创建文件夹失败'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 下载图片</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">download</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 睡眠 降低爬虫的速度</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 通过 superagent 保存图片</span>\n      <span class=\"token keyword\">const</span> req <span class=\"token operator\">=</span>  superagent<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 使用了stream(流)</span>\n      req<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.png</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">下载</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">done</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">下载图片失败</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 循环arr数据下载图片</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> arr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">await</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">init</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> maxPage<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> urlHtml <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUrlHtml</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> getDate <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getDom</span><span class=\"token punctuation\">(</span>urlHtml<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">downloadImg</span><span class=\"token punctuation\">(</span>getDate<span class=\"token punctuation\">)</span>\n    id <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></details>\n\n<p>源码地址: <a href=\"https://github.com/xiaotiandada/interest-page/tree/master/crawler\">https://github.com/xiaotiandada/interest-page/tree/master/crawler</a></p>\n<h2 id=\"修改1\">修改1</h2>\n<p>--- 分割线 ---</p>\n<p>感谢大佬的指点 ----&gt; QQ 923398776</p>\n<h3 id=\"资料-1\">资料</h3>\n<p><a href=\"https://andyliwr.github.io/2017/12/05/nodejs_spider_ip/\">https://andyliwr.github.io/2017/12/05/nodejs_spider_ip/</a></p>\n<h3 id=\"使用async控制并发数\">使用async控制并发数</h3>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// async map limit 控制并发数</span>\n    async<span class=\"token punctuation\">.</span><span class=\"token function\">mapLimit</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> results</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> err\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">async.mapLimit</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre><p>文档: <a href=\"https://www.npmjs.com/package/async\">https://www.npmjs.com/package/async</a></p>\n<h3 id=\"动态设置ua\">动态设置UA</h3>\n<pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token comment\">// userAgent</span>\n    <span class=\"token keyword\">const</span> userAgents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'Mozilla/5.0 ..'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> userAgent <span class=\"token operator\">=</span> userAgents<span class=\"token punctuation\">[</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> userAgents<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n      <span class=\"token comment\">// 通过 superagent 保存图片</span>\n      <span class=\"token keyword\">const</span> req <span class=\"token operator\">=</span>  superagent<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'User-Agent'</span><span class=\"token operator\">:</span> userAgent <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 使用了stream(流)</span>\n      req<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.png</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">下载</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">done</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">下载图片失败</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre><h3 id=\"all-code-1\">All Code</h3>\n<details>\n<summary>查看所有代码</summary>\n\n\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> superagent <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'superagent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cheerio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cheerio'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs-extra'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> async <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"async\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">let</span> maxPage <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\n<span class=\"token comment\">// userAgent</span>\n<span class=\"token keyword\">const</span> userAgents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0) ,Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b13pre) Gecko/20110307 Firefox/4.0b13pre'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Opera/9.25 (Windows NT 5.1; U; en), Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36'</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUrlHtml</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 外层定义的id</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> superagent<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://www.zcool.com.cn/?p=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>text\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getDom</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">html</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>html<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token comment\">// 没html返回</span>\n  <span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 储存需要下载的数据</span>\n  <span class=\"token comment\">// 获取dom 循环写入数据</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.all-work-list .work-list-box .card-box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span> el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> img <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.card-img a img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> title <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.card-info .card-info-title a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> title<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 去掉 / 因为 / 会认为是路径, 根据实际情况来操作</span>\n      <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@260w_195h_1c_1e_1o_100sh.jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 去掉后缀 不使用缩略图 根据实际情况来操作</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> arr\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">downloadImg</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 先删除文件夹 可以不用这步 因为开始写的时候会重复创建 我又懒得删</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'删除文件夹失败'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 创建文件夹 根据id命名</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'创建文件夹失败'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 下载图片</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">download</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> userAgent <span class=\"token operator\">=</span> userAgents<span class=\"token punctuation\">[</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> userAgents<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n      <span class=\"token comment\">// 通过 superagent 保存图片</span>\n      <span class=\"token keyword\">const</span> req <span class=\"token operator\">=</span>  superagent<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'User-Agent'</span><span class=\"token operator\">:</span> userAgent <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 使用了stream(流)</span>\n      req<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./page</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.png</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">下载</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">done</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">下载图片失败</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// async map limit 控制并发数</span>\n    async<span class=\"token punctuation\">.</span><span class=\"token function\">mapLimit</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> results</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> err\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">async.mapLimit</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">init</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> maxPage<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> urlHtml <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUrlHtml</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> getDate <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getDom</span><span class=\"token punctuation\">(</span>urlHtml<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">downloadImg</span><span class=\"token punctuation\">(</span>getDate<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n    id <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre></details>\n\n\n<blockquote>\n<p>不足, 没有动态设置Ip等等, 希望大佬多多指点</p>\n</blockquote>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}