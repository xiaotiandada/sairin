{"pageProps":{"post":{"id":"MDU6SXNzdWU3ODg3NDY1NDg=","url":"https://github.com/xiaotiandada/blog/issues/39","title":"vue微信分享","updatedAt":"2021-01-19T06:29:54Z","createdAt":"2021-01-19T06:29:54Z","body":"2019-11-02 00:30:30\r\n\r\n[上文 配置环境](https://xiaotiandada.github.io/2019/10/23/%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95%E5%BE%AE%E4%BF%A1SDK/)\r\n\r\n这篇主要是分享vue做微信分享\r\n\r\n<!-- more -->\r\n\r\n假设本地的开发环境已经准备好了!!! 👍 并且你有一个好的同事为你写好了接口😊\r\n\r\n\r\nnpm的地址\r\n\r\n[sdk](https://www.npmjs.com/package/weixin-js-sdk)\r\n[axios](https://www.npmjs.com/package/axios)\r\n\r\n```bash\r\nnpm install weixin-js-sdk #微信官方js-sdk\r\n\r\nnpm install axios #基于Promise的HTTP客户端，用于浏览器和node.js\r\n```\r\n\r\n新建一个js文件(假如他叫wechat_share.js)\r\n\r\n```js\r\nimport wx from 'weixin-js-sdk'\r\nimport axios from 'axios'\r\n\r\nexport default ({ title, desc, link, imgUrl }) => {\r\n  let defaultTitle = '默认标题'\r\n  let defaultDesc = '默认描述'\r\n  let defaultLink = window.location.href\r\n  let defaultimgUrl ='默认图片'\r\n  // 通过接口获取签名信息, 传递url过去, url 需要 encodeURIComponent\r\n  axios\r\n    .get(`/xxx/sign?url=${encodeURIComponent(defaultLink)}`)\r\n    .then(res => {\r\n      if (res.status === 200 && '其他判断') {\r\n        let { hash, timestamp, nonce } = res.data.data\r\n        wx.config({\r\n          debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\r\n          appId: 'xxxxxx', // 必填，公众号的唯一标识\r\n          timestamp, // 必填，生成签名的时间戳\r\n          nonceStr: nonce, // 必填，生成签名的随机串\r\n          signature: hash, // 必填，签名\r\n          jsApiList: [\r\n            'updateAppMessageShareData',\r\n            'updateTimelineShareData',\r\n            'onMenuShareAppMessage'\r\n          ]\r\n        })\r\n        wx.error(function(res) {\r\n          console.log('wechat error', res)\r\n        })\r\n        wx.ready(function() {\r\n          wx.updateAppMessageShareData({\r\n            title: title || defaultTitle,\r\n            desc: desc || defaultDesc,\r\n            link: link || defaultLink,\r\n            imgUrl: imgUrl || defaultimgUrl,\r\n            success: function() {\r\n              console.log('wechat share success updateAppMessageShareData')\r\n            }\r\n          })\r\n          wx.updateTimelineShareData({\r\n            title: title || desc || defaultTitle,\r\n            link: link || defaultLink,\r\n            imgUrl: imgUrl || defaultimgUrl,\r\n            success: function() {\r\n              console.log('wechat share success updateTimelineShareData')\r\n            }\r\n          })\r\n          // 即将废弃，适配电脑版微信，参考：https://mp.weixin.qq.com/wiki?action=doc&id=mp1421141115#10\r\n          wx.onMenuShareAppMessage({\r\n            title: title || defaultTitle,\r\n            desc: desc || defaultDesc,\r\n            link: link || defaultLink,\r\n            imgUrl: imgUrl || defaultimgUrl,\r\n            success: function() {\r\n              console.log('wechat share success onMenuShareAppMessage')\r\n            }\r\n          })\r\n        })\r\n      }\r\n    })\r\n}\r\n```\r\n\r\n封装了一个简单的方法, 用户做微信分享 我们只需要调用方法, 并且传递信息即可, 里面的标题信息可以根据自己的实际情况修改!!!\r\n\r\n接下来只需要在使用的地方调用即可(我在全局写了一个)\r\n\r\n```js\r\n// main.js\r\nimport wechatShare from 'wechat_share'\r\nVue.prototype.$wechatShare = wechatShare\r\n\r\n// other.vue xxx used\r\n\r\nthis.$wechatShare({})\r\n```\r\n\r\n如果每个页面都调用一次那就太麻烦了, 利用router的钩子函数, 然后把方法放入router.js 里面, 使用 router.afterEach 方法([全局后置钩子](https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E5%85%A8%E5%B1%80%E5%90%8E%E7%BD%AE%E9%92%A9%E5%AD%90))\r\n\r\n```js\r\n// router.js\r\nimport wechatShare from 'wechat_share'\r\n\r\nrouter.afterEach((to, from) => {\r\n  wechatShare({})\r\n})\r\n```\r\n然后每个页面都会拥有分享功能(😄😄😄😄)\r\n\r\n---\r\n\r\n但是这里有一个问题\b⚠️️️️️\b⚠️️️️️\b⚠️️️️️, 切换页面 然后去签名的时候, 微信报错说是无效签名!!!!\r\n\r\n原因是因为传递的localhost.href与当前页面不符合!!!\r\n\r\n因为router.afterEach是异步的(别人这样说的)然后需要通过this.$nextTick来解决(用setTimeout也可以 但是不太好 你懂的233)\r\n```js\r\n// router.js\r\nimport wechatShare from 'wechat_share'\r\nimport Vue from 'vue'\r\n\r\nrouter.afterEach((to, from) => {\r\n  Vue.nextTick(() => {\r\n    wechatShare({})\r\n  })\r\n})\r\n```\r\n\r\n在router里面使用讲this.$nextTick修改为Vue.nextTick(这样就可以解决, router.afterEach获取的localhost.href与当前页面不符合的问题\r\n\r\n然后就是一个个别页面, 需要定制化内容分享, 调用方法即可\r\n\r\n```js\r\n// 异步\r\nasync xx() {\r\n  await xx().then(() => {\r\n      this.$wechatShare({\r\n        title,\r\n        desc,\r\n        imgUrl\r\n      })\r\n  })\r\n}\r\n\r\n// 同步\r\nthis.$wechatShare({\r\n  title,\r\n  desc,\r\n  imgUrl\r\n})\r\n```\r\n\r\n如果是异步的只需要在调用完方法之后, 调用写入内容即可(🚀🚀🚀)\r\n\r\n---\r\n\r\n如果每个页面都想设置怎么办???\r\n\r\n解决方案 在router的meta里面配置一些简单的信息即可\r\n\r\n```js\r\n...\r\nrouter: [\r\n     {\r\n      path: '/',\r\n      name: 'index',\r\n      component: () => import(/* webpackChunkName: \"index\" */ 'index.vue'),\r\n      meta: {\r\n        title: 'xxxxxxxxxx'\r\n        ....\r\n      }\r\n    },\r\n]\r\n...\r\n\r\nrouter.afterEach((to, from) => {\r\n  Vue.nextTick(() => {\r\n    wechatShare({\r\n      title: to.meta.title\r\n    })\r\n  })\r\n})\r\n```\r\n\r\n在钩子函数afterEach里面设置默认的title: to.meta.title 👍 🚀 🔥\r\n\r\n效果图\r\n\r\n[体验地址](https://matataki.io/) 微信打开会自动跳转的\r\n\r\nhttps://matataki.io/\r\n\r\n![效果图](vue微信分享/1.png)\r\n\r\n","comments":{"nodes":[]},"reactionGroups":[{"content":"THUMBS_UP","reactors":{"totalCount":0}},{"content":"THUMBS_DOWN","reactors":{"totalCount":0}},{"content":"LAUGH","reactors":{"totalCount":0}},{"content":"HOORAY","reactors":{"totalCount":0}},{"content":"CONFUSED","reactors":{"totalCount":0}},{"content":"HEART","reactors":{"totalCount":0}},{"content":"ROCKET","reactors":{"totalCount":0}},{"content":"EYES","reactors":{"totalCount":0}}],"author":{"login":"xiaotiandada","url":"https://github.com/xiaotiandada","avatarUrl":"https://avatars.githubusercontent.com/u/24250627?u=51a93e07957381123eb9fbdd6407de36033b578d&v=4"},"html":"<p>2019-11-02 00:30:30</p>\n<p><a href=\"https://xiaotiandada.github.io/2019/10/23/%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95%E5%BE%AE%E4%BF%A1SDK/\">上文 配置环境</a></p>\n<p>这篇主要是分享vue做微信分享</p>\n<!-- more -->\n\n<p>假设本地的开发环境已经准备好了!!! 👍 并且你有一个好的同事为你写好了接口😊</p>\n<p>npm的地址</p>\n<p><a href=\"https://www.npmjs.com/package/weixin-js-sdk\">sdk</a>\n<a href=\"https://www.npmjs.com/package/axios\">axios</a></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">npm install weixin-js-sdk #微信官方js-sdk\n\nnpm install axios #基于Promise的HTTP客户端，用于浏览器和node.js</code></pre><p>新建一个js文件(假如他叫wechat_share.js)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> wx <span class=\"token keyword\">from</span> <span class=\"token string\">'weixin-js-sdk'</span>\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">,</span> imgUrl <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> defaultTitle <span class=\"token operator\">=</span> <span class=\"token string\">'默认标题'</span>\n  <span class=\"token keyword\">let</span> defaultDesc <span class=\"token operator\">=</span> <span class=\"token string\">'默认描述'</span>\n  <span class=\"token keyword\">let</span> defaultLink <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href\n  <span class=\"token keyword\">let</span> defaultimgUrl <span class=\"token operator\">=</span><span class=\"token string\">'默认图片'</span>\n  <span class=\"token comment\">// 通过接口获取签名信息, 传递url过去, url 需要 encodeURIComponent</span>\n  axios\n    <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/xxx/sign?url=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>defaultLink<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'其他判断'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> hash<span class=\"token punctuation\">,</span> timestamp<span class=\"token punctuation\">,</span> nonce <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data\n        wx<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">debug</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span>\n          <span class=\"token literal-property property\">appId</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxxxxx'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 必填，公众号的唯一标识</span>\n          timestamp<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 必填，生成签名的时间戳</span>\n          <span class=\"token literal-property property\">nonceStr</span><span class=\"token operator\">:</span> nonce<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 必填，生成签名的随机串</span>\n          <span class=\"token literal-property property\">signature</span><span class=\"token operator\">:</span> hash<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 必填，签名</span>\n          <span class=\"token literal-property property\">jsApiList</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'updateAppMessageShareData'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'updateTimelineShareData'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'onMenuShareAppMessage'</span>\n          <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        wx<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wechat error'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        wx<span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          wx<span class=\"token punctuation\">.</span><span class=\"token function\">updateAppMessageShareData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> title <span class=\"token operator\">||</span> defaultTitle<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">desc</span><span class=\"token operator\">:</span> desc <span class=\"token operator\">||</span> defaultDesc<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> link <span class=\"token operator\">||</span> defaultLink<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">imgUrl</span><span class=\"token operator\">:</span> imgUrl <span class=\"token operator\">||</span> defaultimgUrl<span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wechat share success updateAppMessageShareData'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          wx<span class=\"token punctuation\">.</span><span class=\"token function\">updateTimelineShareData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> title <span class=\"token operator\">||</span> desc <span class=\"token operator\">||</span> defaultTitle<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> link <span class=\"token operator\">||</span> defaultLink<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">imgUrl</span><span class=\"token operator\">:</span> imgUrl <span class=\"token operator\">||</span> defaultimgUrl<span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wechat share success updateTimelineShareData'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">// 即将废弃，适配电脑版微信，参考：https://mp.weixin.qq.com/wiki?action=doc&amp;id=mp1421141115#10</span>\n          wx<span class=\"token punctuation\">.</span><span class=\"token function\">onMenuShareAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> title <span class=\"token operator\">||</span> defaultTitle<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">desc</span><span class=\"token operator\">:</span> desc <span class=\"token operator\">||</span> defaultDesc<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> link <span class=\"token operator\">||</span> defaultLink<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">imgUrl</span><span class=\"token operator\">:</span> imgUrl <span class=\"token operator\">||</span> defaultimgUrl<span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wechat share success onMenuShareAppMessage'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre><p>封装了一个简单的方法, 用户做微信分享 我们只需要调用方法, 并且传递信息即可, 里面的标题信息可以根据自己的实际情况修改!!!</p>\n<p>接下来只需要在使用的地方调用即可(我在全局写了一个)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// main.js</span>\n<span class=\"token keyword\">import</span> wechatShare <span class=\"token keyword\">from</span> <span class=\"token string\">'wechat_share'</span>\n<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$wechatShare <span class=\"token operator\">=</span> wechatShare\n\n<span class=\"token comment\">// other.vue xxx used</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$wechatShare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p>如果每个页面都调用一次那就太麻烦了, 利用router的钩子函数, 然后把方法放入router.js 里面, 使用 router.afterEach 方法(<a href=\"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E5%85%A8%E5%B1%80%E5%90%8E%E7%BD%AE%E9%92%A9%E5%AD%90\">全局后置钩子</a>)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// router.js</span>\n<span class=\"token keyword\">import</span> wechatShare <span class=\"token keyword\">from</span> <span class=\"token string\">'wechat_share'</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">wechatShare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p>然后每个页面都会拥有分享功能(😄😄😄😄)</p>\n<hr>\n<p>但是这里有一个问题\b⚠️️️️️\b⚠️️️️️\b⚠️️️️️, 切换页面 然后去签名的时候, 微信报错说是无效签名!!!!</p>\n<p>原因是因为传递的localhost.href与当前页面不符合!!!</p>\n<p>因为router.afterEach是异步的(别人这样说的)然后需要通过this.$nextTick来解决(用setTimeout也可以 但是不太好 你懂的233)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// router.js</span>\n<span class=\"token keyword\">import</span> wechatShare <span class=\"token keyword\">from</span> <span class=\"token string\">'wechat_share'</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  Vue<span class=\"token punctuation\">.</span><span class=\"token function\">nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">wechatShare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p>在router里面使用讲this.$nextTick修改为Vue.nextTick(这样就可以解决, router.afterEach获取的localhost.href与当前页面不符合的问题</p>\n<p>然后就是一个个别页面, 需要定制化内容分享, 调用方法即可</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 异步</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">xx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">xx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$wechatShare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        title<span class=\"token punctuation\">,</span>\n        desc<span class=\"token punctuation\">,</span>\n        imgUrl\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 同步</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$wechatShare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  title<span class=\"token punctuation\">,</span>\n  desc<span class=\"token punctuation\">,</span>\n  imgUrl\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p>如果是异步的只需要在调用完方法之后, 调用写入内容即可(🚀🚀🚀)</p>\n<hr>\n<p>如果每个页面都想设置怎么办???</p>\n<p>解决方案 在router的meta里面配置一些简单的信息即可</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token literal-property property\">router</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n     <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">component</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* webpackChunkName: \"index\" */</span> <span class=\"token string\">'index.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'xxxxxxxxxx'</span>\n        <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token operator\">...</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  Vue<span class=\"token punctuation\">.</span><span class=\"token function\">nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">wechatShare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> to<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>title\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p>在钩子函数afterEach里面设置默认的title: to.meta.title 👍 🚀 🔥</p>\n<p>效果图</p>\n<p><a href=\"https://matataki.io/\">体验地址</a> 微信打开会自动跳转的</p>\n<p><a href=\"https://matataki.io/\">https://matataki.io/</a></p>\n<p><img src=\"vue%E5%BE%AE%E4%BF%A1%E5%88%86%E4%BA%AB/1.png\" alt=\"效果图\"></p>\n","attributes":{}},"themeConfig":{"title":"Blog(issues)","links":[{"title":"GitHub","url":"https://github.com/xiaotiandada/blog"},{"title":"Twitter","url":"https://twitter.com/XiaoTianIsMe"}]}},"__N_SSG":true}